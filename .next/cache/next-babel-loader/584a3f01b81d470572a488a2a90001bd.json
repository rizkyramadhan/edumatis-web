{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport login from \"../queries/user/login\";\nimport { flow, types } from 'mobx-state-tree';\nimport AsyncStorage from \"../utils/AsyncStorage\";\nimport { UserRecord } from \"./User\";\nimport List from \"../utils/List\";\nimport Record from \"../utils/Record\";\nimport config from \"../config\";\nimport rawQuery from \"../queries/crud/rawQuery\";\nexport const SessionRecord = Record({\n  tableName: 'session',\n  columns: {\n    id: types.maybe(types.string),\n    client_id: types.maybe(types.integer),\n    user: UserRecord\n  },\n  actions: self => ({\n    login: flow(function* (client_id, username, password) {\n      try {\n        const response = yield login(client_id, username, password);\n        yield AsyncStorage.setItem('SESSION', _JSON$stringify(response));\n        const result = yield rawQuery(`{\n          kelas_murid(where: {murid_id: {_eq: ${response.murid.id}}}) {\n            kelas {\n              sekolah {\n                id\n                margin\n                nama_sekolah\n              }\n              nama_kelas\n              id\n            }\n          }\n        }`);\n\n        if (result) {\n          response.kelas = {\n            id: result.kelas_murid[0].kelas.id,\n            nama: result.kelas_murid[0].kelas.nama_kelas\n          };\n          response.sekolah = {\n            id: result.kelas_murid[0].kelas.sekolah.id,\n            margin: result.kelas_murid[0].kelas.sekolah.margin,\n            nama: result.kelas_murid[0].kelas.sekolah.nama_sekolah\n          };\n        }\n\n        yield AsyncStorage.setItem('SESSION', _JSON$stringify(response));\n        return response;\n      } catch (e) {\n        console.warn(e);\n        return false;\n      }\n    }),\n    restore: function (session) {\n      self.id = session.id;\n      self[config.table + '_id'] = session[config.table + '_id'];\n      self[config.table] = session[config.table];\n    },\n    logout: flow(function* () {\n      yield AsyncStorage.removeItem('SESSION');\n      self.id = null;\n      self[config.table + '_id'] = null;\n      self[config.table] = null;\n    })\n  })\n});\nexport const SessionList = List({\n  record: SessionRecord,\n  query: `{\n    id\n    user_id\n  }`\n});","map":null,"metadata":{},"sourceType":"module"}