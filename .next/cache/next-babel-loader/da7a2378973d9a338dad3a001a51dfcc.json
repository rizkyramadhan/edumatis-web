{"ast":null,"code":"var _jsxFileName = \"/Users/riz/Documents/edumatis-web/pages/app/screens/admin/Kelas/Kelas.tsx\";\nvar __jsx = React.createElement;\nimport StackNav from \"../../../../../libs/nav/StackNav\";\nimport rawQuery from \"../../../../../libs/queries/crud/rawQuery\";\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../../libs/ui/UIButton\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport UIList from \"../../../../../libs/ui/UIList\";\nimport UIListItem from \"../../../../../libs/ui/UIListItem\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native-web\";\nimport KelasDetail from \"./KelasDetail\";\nimport MuridDetail from \"./MuridDetail\";\nconst Kelas = observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    list: [],\n    loading: true\n  });\n  useEffect(() => {\n    let fetch = async () => {\n      const result = await rawQuery(`{\n        kelas(order_by: {id: asc}) {\n          id\n          kelas_murids_aggregate {\n            aggregate {\n              count\n            }\n          }\n          nama_kelas\n        }\n      }\n      `);\n\n      if (result && result.kelas) {\n        data.list = result.kelas;\n      }\n\n      data.loading = false;\n    };\n\n    fetch();\n  }, []);\n  return __jsx(UIContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Kelas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(UIButton, {\n    size: \"small\",\n    onPress: () => {\n      navigation.navigate(\"KelasDetail\", {\n        item: {}\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"+ Kelas Baru\")), __jsx(UIBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(UIList, {\n    data: data.list,\n    loading: data.loading,\n    render: list => {\n      const item = list.item;\n      return __jsx(UIListItem, {\n        onPress: () => {\n          navigation.navigate(\"KelasDetail\", {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, __jsx(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: \"bold\",\n          color: \"#555\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.nama_kelas), __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, `${item.kelas_murids_aggregate.aggregate.count} murid`)), __jsx(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n});\nexport default StackNav({\n  Kelas: {\n    screen: Kelas\n  },\n  MuridDetail: {\n    screen: MuridDetail\n  },\n  KelasDetail: {\n    screen: KelasDetail\n  }\n});","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/pages/app/screens/admin/Kelas/Kelas.tsx"],"names":["StackNav","rawQuery","UIBody","UIButton","UIContainer","UIHead","UIList","UIListItem","observer","useObservable","React","useEffect","Text","View","KelasDetail","MuridDetail","Kelas","navigation","data","list","loading","fetch","result","kelas","navigate","item","fontSize","fontWeight","color","nama_kelas","kelas_murids_aggregate","aggregate","count","screen"],"mappings":"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","sourcesContent":["import StackNav from \"@app/libs/nav/StackNav\";\nimport rawQuery from \"@app/libs/queries/crud/rawQuery\";\nimport UIBody from \"@app/libs/ui/UIBody\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport UIContainer from \"@app/libs/ui/UIContainer\";\nimport UIHead from \"@app/libs/ui/UIHead\";\nimport UIList from \"@app/libs/ui/UIList\";\nimport UIListItem from \"@app/libs/ui/UIListItem\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\nimport KelasDetail from \"./KelasDetail\";\nimport MuridDetail from \"./MuridDetail\";\n\nconst Kelas = observer(({ navigation }: any) => {\n  const data = useObservable({\n    list: [],\n    loading: true\n  });\n  useEffect(() => {\n    let fetch = async () => {\n      const result = await rawQuery(`{\n        kelas(order_by: {id: asc}) {\n          id\n          kelas_murids_aggregate {\n            aggregate {\n              count\n            }\n          }\n          nama_kelas\n        }\n      }\n      `);\n      if (result && result.kelas) {\n        data.list = result.kelas;\n      }\n      data.loading = false;\n    };\n    fetch();\n  }, []);\n  return (\n    <UIContainer>\n      <UIHead navigation={navigation} title=\"Kelas\">\n        <UIButton\n          size=\"small\"\n          onPress={() => {\n            navigation.navigate(\"KelasDetail\", {\n              item: {}\n            });\n          }}\n        >\n          + Kelas Baru\n        </UIButton>\n      </UIHead>\n      <UIBody>\n        <UIList\n          data={data.list}\n          loading={data.loading}\n          render={(list: any) => {\n            const item = list.item;\n            return (\n              <UIListItem\n                onPress={() => {\n                  navigation.navigate(\"KelasDetail\", {\n                    item: item\n                  });\n                }}\n              >\n                <View>\n                  <Text\n                    style={{ fontSize: 15, fontWeight: \"bold\", color: \"#555\" }}\n                  >\n                    {item.nama_kelas}\n                  </Text>\n                  <Text>\n                    {`${item.kelas_murids_aggregate.aggregate.count} murid`}\n                  </Text>\n                </View>\n                <View>\n                  <Text />\n                </View>\n              </UIListItem>\n            );\n          }}\n        />\n      </UIBody>\n    </UIContainer>\n  );\n});\n\nexport default StackNav({\n  Kelas: { screen: Kelas },\n  MuridDetail: { screen: MuridDetail },\n  KelasDetail: { screen: KelasDetail }\n});\n"]},"metadata":{},"sourceType":"module"}