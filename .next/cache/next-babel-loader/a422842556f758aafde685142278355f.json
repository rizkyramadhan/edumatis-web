{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UICol from \"../../../../../libs/ui/UICol\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIFieldText from \"../../../../../libs/ui/UIFieldText\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport UIRow from \"../../../../../libs/ui/UIRow\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React from \"react\";\nimport UIFieldSelectNative from \"../../../../../libs/ui/UIFieldSelectNative\";\nimport KelasPicker from \"../Kelas/KelasPicker\";\nimport { Text, Platform, Alert } from \"react-native-web\";\nimport UIButton from \"../../../../../libs/ui/UIButton\";\nimport updateRecord from \"../../../../../libs/queries/crud/updateRecord\";\nimport createRecord from \"../../../../../libs/queries/crud/createRecord\";\nimport deleteRecord from \"../../../../../libs/queries/crud/deleteRecord\";\nexport default observer(function (_ref) {\n  var navigation = _ref.navigation;\n  var data = useObservable({\n    loading: true,\n    form: (navigation || {\n      getParam: function getParam() {\n        return {};\n      }\n    }).getParam(\"item\")\n  });\n  return __jsx(UIContainer, null, __jsx(UIHead, {\n    navigation: navigation,\n    title: \" Pengumuman \" + (data.form.id ? \"#\".concat(data.form.id) : \"Baru\"),\n    onBack: function onBack() {\n      navigation.goBack();\n    }\n  }, __jsx(UIRow, null, __jsx(UIButton, {\n    onPress:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!data.form.id) {\n                _context.next = 6;\n                break;\n              }\n\n              data.form.id = _parseInt(data.form.id);\n              _context.next = 4;\n              return updateRecord(\"pengumuman\", data.form);\n\n            case 4:\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.next = 8;\n              return createRecord(\"pengumuman\", data.form);\n\n            case 8:\n              navigation.goBack();\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))\n  }, \"Simpan\"), __jsx(UIButton, {\n    style: {\n      backgroundColor: \"red\",\n      marginLeft: -5\n    },\n    onPress:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(Platform.OS === \"web\")) {\n                _context3.next = 8;\n                break;\n              }\n\n              if (!confirm(\"Apakah anda yakin ingin menghapus pengumuman ini ?\")) {\n                _context3.next = 6;\n                break;\n              }\n\n              if (!data.form.id) {\n                _context3.next = 5;\n                break;\n              }\n\n              _context3.next = 5;\n              return deleteRecord(\"pengumuman\", {\n                id: data.form.id\n              });\n\n            case 5:\n              navigation.goBack();\n\n            case 6:\n              _context3.next = 9;\n              break;\n\n            case 8:\n              Alert.alert(\"Menghapus Kewajiban\", \"Apakah Anda yakin ingin menghapus pengumuman ini ?\", [{\n                text: \"NO\",\n                style: \"cancel\",\n                onPress: function onPress() {}\n              }, {\n                text: \"YES\",\n                onPress: function () {\n                  var _onPress = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee2() {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!data.form.id) {\n                              _context2.next = 3;\n                              break;\n                            }\n\n                            _context2.next = 3;\n                            return deleteRecord(\"pengumuman\", {\n                              id: data.form.id\n                            });\n\n                          case 3:\n                            navigation.goBack();\n\n                          case 4:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  function onPress() {\n                    return _onPress.apply(this, arguments);\n                  }\n\n                  return onPress;\n                }()\n              }]);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))\n  }, \"Hapus\"))), __jsx(UIBody, null, __jsx(UIFieldText, {\n    label: \"Text Pengumuman\",\n    setValue: function setValue(value) {\n      data.form.pengumuman = value;\n    },\n    value: data.form.pengumuman\n  }), __jsx(UIRow, null, __jsx(UICol, {\n    size: 4\n  }, __jsx(UIFieldSelectNative, {\n    label: \"Status\",\n    items: [{\n      value: \"aktif\",\n      label: \"Aktif\"\n    }, {\n      value: \"non-aktif\",\n      label: \"Non-Aktif\"\n    }],\n    value: data.form.status,\n    setValue: function setValue(v) {\n      data.form.status = v;\n    }\n  }))), __jsx(KelasPicker, {\n    form: data.form,\n    renderKelas: function renderKelas(kelas, detail) {\n      return __jsx(Text, {\n        style: {\n          paddingLeft: 15,\n          paddingVertical: 10,\n          color: \"#333\"\n        }\n      }, _Object$keys(kelas.murid).length === 1 ? \"Untuk semua murid di kelas \".concat(detail.nama_kelas) : \"Khusus untuk murid dibawah ini\");\n    }\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}