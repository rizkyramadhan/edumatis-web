{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport config from \"../../config\";\nimport { AsyncStorage } from \"react-native-web\";\nexport default (async (query, options) => {\n  const opt = _objectSpread({}, {\n    useSession: true,\n    debug: false,\n    where: {},\n    args: \"limit:1\"\n  }, options);\n\n  let headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (opt.useSession) {\n    const sessionRaw = await AsyncStorage.getItem(\"SESSION\");\n    const session = JSON.parse(sessionRaw || \"false\");\n\n    if (!session) {\n      return false;\n    } else {\n      headers[\"X-Hasura-Session-Id\"] = session.id;\n    }\n  }\n\n  const response = await fetch(config.url, {\n    method: \"POST\",\n    body: _JSON$stringify({\n      query\n    }),\n    headers\n  });\n  const json = await response.json();\n  return json.data;\n});","map":null,"metadata":{},"sourceType":"module"}