{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport config from \"../../config\";\nimport { AsyncStorage } from \"react-native-web\";\nexport default (async (query, options) => {\n  const opt = _objectSpread({}, {\n    useSession: true,\n    debug: false,\n    where: {},\n    args: \"limit:1\"\n  }, options);\n\n  let headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  if (opt.useSession) {\n    const sessionRaw = await AsyncStorage.getItem(\"SESSION\");\n    const session = JSON.parse(sessionRaw || \"false\");\n\n    if (!session) {\n      return false;\n    } else {\n      headers[\"X-Hasura-Session-Id\"] = session.id;\n    }\n  }\n\n  const response = await fetch(config.url, {\n    method: \"POST\",\n    body: _JSON$stringify({\n      query\n    }),\n    headers\n  });\n  const json = await response.json();\n  return json.data;\n});","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/libs/queries/crud/rawQuery.ts"],"names":["config","AsyncStorage","query","options","opt","useSession","debug","where","args","headers","sessionRaw","getItem","session","JSON","parse","id","response","fetch","url","method","body","json","data"],"mappings":";;AAAA,OAAOA,MAAP;AACA,SAASC,YAAT;AAMA,gBAAe,OAAOC,KAAP,EAAsBC,OAAtB,KAAyC;AACtD,QAAMC,GAAG,qBACJ;AAAEC,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,KAAK,EAAE,KAA3B;AAAkCC,IAAAA,KAAK,EAAE,EAAzC;AAA6CC,IAAAA,IAAI,EAAE;AAAnD,GADI,EAEJL,OAFI,CAAT;;AAKA,MAAIM,OAAY,GAAG;AACjB,oBAAgB;AADC,GAAnB;;AAGA,MAAIL,GAAG,CAACC,UAAR,EAAoB;AAClB,UAAMK,UAAU,GAAG,MAAMT,YAAY,CAACU,OAAb,CAAqB,SAArB,CAAzB;AACA,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,UAAU,IAAI,OAAzB,CAAhB;;AACA,QAAI,CAACE,OAAL,EAAc;AACZ,aAAO,KAAP;AACD,KAFD,MAEO;AACLH,MAAAA,OAAO,CAAC,qBAAD,CAAP,GAAiCG,OAAO,CAACG,EAAzC;AACD;AACF;;AAED,QAAMC,QAAkB,GAAG,MAAMC,KAAK,CAACjB,MAAM,CAACkB,GAAR,EAAa;AACjDC,IAAAA,MAAM,EAAE,MADyC;AAEjDC,IAAAA,IAAI,EAAE,gBAAe;AACnBlB,MAAAA;AADmB,KAAf,CAF2C;AAKjDO,IAAAA;AALiD,GAAb,CAAtC;AAOA,QAAMY,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;AACA,SAAOA,IAAI,CAACC,IAAZ;AACD,CA5BD","sourcesContent":["import config from \"@app/libs/config\";\nimport { AsyncStorage } from \"react-native\";\n\ninterface opts {\n  useSession?: boolean;\n}\n\nexport default async (query: string, options?: opts) => {\n  const opt = {\n    ...{ useSession: true, debug: false, where: {}, args: \"limit:1\" },\n    ...options\n  };\n\n  let headers: any = {\n    \"Content-Type\": \"application/json\"\n  };\n  if (opt.useSession) {\n    const sessionRaw = await AsyncStorage.getItem(\"SESSION\");\n    const session = JSON.parse(sessionRaw || \"false\");\n    if (!session) {\n      return false;\n    } else {\n      headers[\"X-Hasura-Session-Id\"] = session.id;\n    }\n  }\n\n  const response: Response = await fetch(config.url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      query\n    }),\n    headers\n  });\n  const json = await response.json();\n  return json.data;\n};\n"]},"metadata":{},"sourceType":"module"}