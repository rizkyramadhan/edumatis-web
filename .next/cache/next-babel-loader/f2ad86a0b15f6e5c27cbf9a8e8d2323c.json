{"ast":null,"code":"var __jsx = React.createElement;\nimport { S, St } from \"./Style\";\nimport React, { useState } from \"react\";\nimport { Picker, Text, View } from \"react-native-web\";\nexport default (({\n  setValue,\n  value,\n  items,\n  label,\n  style,\n  fieldActiveStyle,\n  inputStyle = S(St.TextInput),\n  inputProps\n}) => {\n  const {\n    0: temp,\n    1: setTemp\n  } = useState();\n  const {\n    0: focused,\n    1: setFocused\n  } = useState(false);\n  const SLabel = !!value || !!temp ? St.LabelFocus : St.SelectLabel;\n  return __jsx(View, {\n    style: focused ? S(S(St.Field, style), S(St.FieldActive, fieldActiveStyle)) : S(St.Field, style)\n  }, !!label && __jsx(Text, {\n    style: S(St.LabelFocus, {\n      marginLeft: 10\n    })\n  }, label), __jsx(Picker, {\n    mode: \"dialog\",\n    style: {\n      marginVertical: 5\n    },\n    selectedValue: value || temp,\n    onValueChange: (itemValue, itemIndex) => setValue != undefined ? setValue(itemValue) : setTemp(itemValue)\n  }, items.map((item, index) => {\n    if (typeof item === \"string\") return __jsx(Picker.Item, {\n      key: index,\n      label: item,\n      value: item\n    });\n    return __jsx(Picker.Item, {\n      key: index,\n      label: item.label,\n      value: item.value\n    });\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}