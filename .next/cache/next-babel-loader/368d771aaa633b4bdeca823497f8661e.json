{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport query from \"../../../libs/queries/crud/query\";\nimport { checkSession } from \"../../../libs/queries/user/checkSession\";\nimport UIButton from \"../../../libs/ui/UIButton\";\nimport UIFieldText from \"../../../libs/ui/UIFieldText\";\nimport UIImage from \"../../../libs/ui/UIImage\";\nimport { RootStore } from \"../../../libs/stores/RootStore\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, View, ScrollView } from \"react-native-web\";\nimport { createNavigateTo } from \"../../../libs/nav/NavContainer\";\nimport UIHead from \"../../../libs/ui/UIHead\";\nexport default observer(({\n  navigation\n}) => {\n  const navigateTo = createNavigateTo(navigation);\n  const data = useObservable({\n    sekolah_id: \"\",\n    nsa: \"\",\n    password: \"\"\n  });\n  const meta = useObservable({\n    sekolah: \"\",\n    murid: \"\",\n    loading: true\n  });\n  useEffect(() => {\n    (async () => {\n      const session = await checkSession();\n\n      if (session && session.murid && session.murid.nsa) {\n        if (session.murid.nsa === \"admin\") {\n          navigation.replace(\"Admin\");\n        } else {\n          navigation.replace(\"Siswa\");\n        }\n\n        return;\n      }\n\n      meta.loading = false;\n    })();\n  }, []);\n\n  if (meta.loading) {\n    return __jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#fff\"\n      }\n    }, __jsx(Text, null, \"Loading...\"));\n  }\n\n  return __jsx(ScrollView, {\n    style: {\n      backgroundColor: \"#fff\"\n    }\n  }, __jsx(View, {\n    style: {\n      alignSelf: \"center\",\n      flexBasis: \"100%\",\n      minWidth: 400\n    }\n  }, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Menu Awal\",\n    onBack: () => {\n      navigateTo(\"Home\");\n    }\n  }), __jsx(UIImage, {\n    source: require(\"../imgs/logo-edumatis_a.png\"),\n    mobileStyle: {\n      height: 150,\n      marginBottom: -10\n    },\n    style: {\n      width: 200,\n      alignSelf: \"center\",\n      marginTop: 10\n    }\n  }), __jsx(Text, {\n    style: {\n      fontSize: 14,\n      fontWeight: 'bold',\n      alignSelf: 'center',\n      color: '#808080',\n      marginBottom: 10\n    }\n  }, \"Aman . Mudah . Handal . Hemat\"), __jsx(UIFieldText, {\n    label: \"ID Sekolah\",\n    sublabel: meta.sekolah,\n    value: data.sekolah_id,\n    setValue: value => data.sekolah_id = value,\n    onBlur: async () => {\n      try {\n        let res = await query(\"sekolah\", [\"nama_sekolah\"], {\n          where: {\n            id: _parseInt(data.sekolah_id)\n          },\n          useSession: false\n        });\n\n        if (res && res.nama_sekolah) {\n          meta.sekolah = res.nama_sekolah;\n        } else {\n          meta.sekolah = \"Sekolah tidak ditemukan\";\n        }\n      } catch (e) {}\n    }\n  }), __jsx(UIFieldText, {\n    label: \"Nomor Induk / NSA\",\n    sublabel: meta.murid,\n    value: data.nsa,\n    setValue: value => data.nsa = value,\n    onBlur: async () => {\n      let res = await query(\"murid\", [\"nama_murid\"], {\n        where: {\n          sekolah_id: _parseInt(data.sekolah_id),\n          nsa: data.nsa\n        },\n        useSession: false\n      });\n\n      if (res && res.nama_murid) {\n        meta.murid = \"Nama: \" + res.nama_murid;\n      } else {\n        meta.murid = \"Nomor Induk tidak ditemukan\";\n      }\n    }\n  }), __jsx(UIFieldText, {\n    type: \"password\",\n    label: \"Password\",\n    value: data.password,\n    setValue: value => data.password = value\n  }), __jsx(UIButton, {\n    onPress: async () => {\n      meta.loading = true;\n      let session = await RootStore.session.login(data.sekolah_id, data.nsa, data.password);\n\n      if (session && session.murid && session.murid.nsa) {\n        if (session.murid.nsa === \"admin\") {\n          navigation.replace(\"Admin\");\n        } else {\n          navigation.replace(\"Siswa\");\n        }\n\n        return;\n      }\n\n      meta.loading = false;\n      location.reload();\n    },\n    style: {\n      alignItems: 'center'\n    }\n  }, \"Login\")));\n});","map":null,"metadata":{},"sourceType":"module"}