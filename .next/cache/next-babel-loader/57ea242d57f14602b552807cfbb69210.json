{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport rawQuery from \"../../../../../libs/queries/crud/rawQuery\";\nimport { getSession } from \"../../../../../libs/queries/user/getsetSession\";\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport UIList from \"../../../../../libs/ui/UIList\";\nimport dayjs from \"dayjs\";\nimport RelativeTime from \"dayjs/plugin/relativeTime\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Text, View } from \"react-native-web\";\ndayjs.extend(RelativeTime);\nexport default observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    loading: true,\n    list: []\n  });\n  return __jsx(UIContainer, null, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Pengumuman\"\n  }), __jsx(UIBody, null, __jsx(UIList, {\n    data: data.list,\n    loading: data.loading,\n    render: list => {\n      const item = list.item;\n      const date = dayjs(item.tgl).fromNow();\n      return __jsx(View, {\n        style: {\n          padding: 10,\n          paddingHorizontal: 15\n        }\n      }, __jsx(View, null, __jsx(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: \"bold\",\n          color: \"#555\"\n        }\n      }, item.pengumuman), __jsx(Text, null, date)));\n    },\n    reload: async () => {\n      const session = await getSession();\n      const kelasRaw = await rawQuery(`{\n              kelas_murid(where: {murid_id: {_eq: ${session.murid.id}}}) {\n                kelas_id\n              }\n            }`);\n\n      if (kelasRaw && kelasRaw.kelas_murid && kelasRaw.kelas_murid.length > 0) {\n        const kelas = kelasRaw.kelas_murid.map(k => {\n          return k.kelas_id.toString();\n        });\n        const result = await rawQuery(`{\n                  pengumuman(where: {status: {_eq: \"aktif\"}, kelas: {_has_keys_any: ${_JSON$stringify(kelas)}}}) {\n                    pengumuman\n                    status\n                    tgl\n                  }\n                }\n                `);\n        data.list = result.pengumuman.map(item => {\n          return item;\n        });\n      }\n\n      data.loading = false;\n    }\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}