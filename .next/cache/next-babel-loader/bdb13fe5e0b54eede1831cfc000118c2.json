{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport createRecord from \"../../../../../libs/queries/crud/createRecord\";\nimport deleteRecord from \"../../../../../libs/queries/crud/deleteRecord\";\nimport rawQuery from \"../../../../../libs/queries/crud/rawQuery\";\nimport updateRecord from \"../../../../../libs/queries/crud/updateRecord\";\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../../libs/ui/UIButton\";\nimport UICol from \"../../../../../libs/ui/UICol\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIFieldSelectNative from \"../../../../../libs/ui/UIFieldSelectNative\";\nimport UIFieldText from \"../../../../../libs/ui/UIFieldText\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport UIRow from \"../../../../../libs/ui/UIRow\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Alert, Platform, Text, View, TouchableOpacity } from \"react-native-web\";\nimport KelasPicker from \"../Kelas/KelasPicker\";\nimport get from \"lodash.get\";\nexport default observer(function (_ref) {\n  var navigation = _ref.navigation;\n  var data = useObservable({\n    form: (navigation || {\n      getParam: function getParam() {\n        return {};\n      }\n    }).getParam(\"item\")\n  });\n  var count = get(data, \"form.transaksi_aggregate.aggregate.count\");\n  useEffect(function () {\n    if (data.form.id) {\n      rawQuery(\"\\n      {\\n        kewajiban(where: {id: {_eq: \".concat(data.form.id, \"}}) {\\n          kelas\\n          batas_pembayaran\\n          id\\n          nominal\\n          nama_kewajiban\\n          status\\n          tgl_batas_pembayaran_bulan\\n          tipe_pembayaran\\n          transaksi_aggregate {\\n            aggregate {\\n              count\\n            }\\n          }\\n        }\\n      }\\n    \")).then(function (res) {\n        data.form = res.kewajiban[0];\n      });\n    }\n  }, []);\n  return __jsx(UIContainer, null, __jsx(UIHead, {\n    navigation: navigation,\n    title: \" Kewajiban \" + (data.form.id ? \"#\".concat(data.form.id, \": \").concat(data.form.nama_kewajiban) : \"Baru\"),\n    onBack: function onBack() {\n      navigation.goBack();\n    }\n  }, __jsx(UIRow, null, __jsx(UIButton, {\n    onPress:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!data.form.id) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return updateRecord(\"kewajiban\", data.form);\n\n            case 3:\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.next = 7;\n              return createRecord(\"kewajiban\", data.form);\n\n            case 7:\n              navigation.goBack();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))\n  }, \"Simpan\"), count === 0 && __jsx(UIButton, {\n    style: {\n      backgroundColor: \"red\",\n      marginLeft: -5\n    },\n    onPress:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(Platform.OS === \"web\")) {\n                _context3.next = 8;\n                break;\n              }\n\n              if (!confirm(\"Apakah anda yakin ingin menghapus kewajiban ini ?\")) {\n                _context3.next = 6;\n                break;\n              }\n\n              if (!data.form.id) {\n                _context3.next = 5;\n                break;\n              }\n\n              _context3.next = 5;\n              return deleteRecord(\"kewajiban\", {\n                id: data.form.id\n              });\n\n            case 5:\n              navigation.goBack();\n\n            case 6:\n              _context3.next = 9;\n              break;\n\n            case 8:\n              Alert.alert(\"Menghapus Kewajiban\", \"Apakah Anda yakin ingin menghapus kewajiban ini ?\", [{\n                text: \"NO\",\n                style: \"cancel\",\n                onPress: function onPress() {}\n              }, {\n                text: \"YES\",\n                onPress: function () {\n                  var _onPress = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee2() {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!data.form.id) {\n                              _context2.next = 3;\n                              break;\n                            }\n\n                            _context2.next = 3;\n                            return deleteRecord(\"kewajiban\", {\n                              id: data.form.id\n                            });\n\n                          case 3:\n                            navigation.goBack();\n\n                          case 4:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  function onPress() {\n                    return _onPress.apply(this, arguments);\n                  }\n\n                  return onPress;\n                }()\n              }]);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))\n  }, \"Hapus\"))), __jsx(UIBody, null, __jsx(UIRow, {\n    style: {\n      paddingBottom: 25\n    }\n  }, count === 0 ? __jsx(Text, null, \"Transaksi untuk kewajiban ini masih kosong.\") : __jsx(TouchableOpacity, null, __jsx(UIRow, null, __jsx(Text, null, \"Terdapat\"), __jsx(Text, {\n    style: {\n      marginHorizontal: 5,\n      textDecorationLine: \"underline\"\n    }\n  }, count, \" transaksi\"), __jsx(Text, null, \" untuk kewajiban ini.\")))), __jsx(UIFieldText, {\n    label: \"Nama Kewajiban\",\n    setValue: function setValue(value) {\n      data.form.nama_kewajiban = value;\n    },\n    value: data.form.nama_kewajiban\n  }), __jsx(UIRow, null, __jsx(UICol, {\n    size: 4,\n    sizesm: 6,\n    sizexs: 6,\n    sizemd: 6\n  }, __jsx(UIFieldText, {\n    label: \"Nominal\",\n    setValue: function setValue(value) {\n      data.form.nominal = value;\n    },\n    value: data.form.nominal\n  })), __jsx(UICol, {\n    size: 4,\n    sizesm: 6,\n    sizexs: 6,\n    sizemd: 6\n  }, __jsx(UIFieldSelectNative, {\n    label: \"Status Kewajiban\",\n    items: [\"aktif\", \"non-aktif\"],\n    setValue: function setValue(value) {\n      data.form.status = value;\n    },\n    value: data.form.status\n  })), __jsx(UICol, {\n    size: 4,\n    sizesm: 6,\n    sizexs: 6,\n    sizemd: 6\n  }, __jsx(UIFieldSelectNative, {\n    label: \"Tipe Pembayaran\",\n    items: [\"Bulanan\", \"Insidentil\"],\n    setValue: function setValue(value) {\n      data.form.tipe_pembayaran = value;\n    },\n    value: data.form.tipe_pembayaran\n  }))), __jsx(KelasPicker, {\n    form: data.form,\n    renderKelasTitle: function renderKelasTitle(kelas) {\n      return __jsx(Text, null, \"Rp \", _parseInt(kelas.nominal).toLocaleString(), \" \");\n    },\n    renderKelas: function renderKelas(kelas, k) {\n      return __jsx(View, null, __jsx(UIFieldText, {\n        label: \"Nominal untuk murid kelas \".concat(k.nama_kelas),\n        value: kelas.nominal,\n        setValue: function setValue(value) {\n          kelas.nominal = value;\n        }\n      }), __jsx(Text, {\n        style: {\n          padding: 10,\n          paddingLeft: 15,\n          color: \"#333\"\n        }\n      }, \"Khusus untuk murid ini, di set sesuai nominal tertera:\"));\n    },\n    renderMurid: function renderMurid(murid, kelas) {\n      return __jsx(UICol, {\n        size: 6\n      }, __jsx(UIFieldText, {\n        label: \"Nominal\",\n        value: murid.nominal || kelas.nominal,\n        setValue: function setValue(value) {\n          murid.nominal = value;\n        }\n      }));\n    }\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}