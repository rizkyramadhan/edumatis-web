{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport createRecord from \"../../../../../libs/queries/crud/createRecord\";\nimport rawQuery from \"../../../../../libs/queries/crud/rawQuery\";\nimport updateRecord from \"../../../../../libs/queries/crud/updateRecord\";\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../../libs/ui/UIButton\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIFieldText from \"../../../../../libs/ui/UIFieldText\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport MuridList from \"./MuridList\";\nexport default observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    loading: true,\n    murids: [],\n    form: (navigation || {\n      getParam: () => ({})\n    }).getParam(\"item\")\n  });\n  useEffect(() => {\n    const fetch = async function () {\n      let res = await rawQuery(`{\n        murid(where: {kelas_murids: {kelas_id: {_eq: ${data.form.id}}}}) {\n          id\n          email\n          data\n          is_active\n          nisn\n          no_akta_kelahiran\n          nsa\n          tgl_lahir\n          updated_at\n          nama_murid\n        }\n      }\n      `);\n      data.murids = res.murid;\n      data.loading = false;\n    };\n\n    fetch();\n  }, []);\n  return __jsx(UIContainer, null, __jsx(UIHead, {\n    navigation: navigation,\n    title: ` Kelas ` + (data.form.id ? `#${data.form.id}` : `Baru`),\n    onBack: () => {\n      navigation.goBack();\n    }\n  }, __jsx(UIButton, {\n    onPress: async () => {\n      const form = _objectSpread({}, data.form);\n\n      delete form.kelas_murids_aggregate;\n\n      if (form.id) {\n        await updateRecord(\"kelas\", form);\n      } else {\n        await createRecord(\"kelas\", form);\n      }\n\n      navigation.goBack();\n    }\n  }, \"Simpan\")), __jsx(UIBody, null, __jsx(UIFieldText, {\n    label: \"Nama Kelas\",\n    setValue: value => {\n      data.form.nama_kelas = value;\n    },\n    value: data.form.nama_kelas || \"\"\n  }), __jsx(MuridList, {\n    kelas: data.form,\n    list: data.murids,\n    loading: data.loading,\n    navigation: navigation\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}