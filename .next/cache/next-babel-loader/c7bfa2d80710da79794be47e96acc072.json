{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport config from \"../../config\";\nimport { getSession } from \"./getsetSession\";\n\nconst get = require(\"lodash.get\");\n\nexport const checkSession = async () => {\n  const session = await getSession();\n  if (!session) return null;\n\n  try {\n    const response = await fetch(config.url, {\n      method: \"POST\",\n      body: _JSON$stringify({\n        query: `{\n          session(where:{id:{_eq:\"${session.id}\"}}) {\n            id\n            ${config.table} {\n              ${config.user.columns.join(\"\\n\")}\n            }\n          }\n        }`\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Hasura-Session-Id\": session.id\n      }\n    });\n    const res = await response.json();\n    return get(res, `data.session[0]`);\n  } catch (e) {\n    return session;\n  }\n};","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/libs/queries/user/checkSession.ts"],"names":["config","getSession","get","require","checkSession","session","response","fetch","url","method","body","query","id","table","user","columns","join","headers","res","json","e"],"mappings":";AAAA,OAAOA,MAAP;AACA,SAASC,UAAT;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEA,OAAO,MAAMC,YAAY,GAAG,YAAY;AACtC,QAAMC,OAAO,GAAG,MAAMJ,UAAU,EAAhC;AACA,MAAI,CAACI,OAAL,EAAc,OAAO,IAAP;;AACd,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACP,MAAM,CAACQ,GAAR,EAAa;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,IAAI,EAAE,gBAAe;AACnBC,QAAAA,KAAK,EAAG;oCACoBN,OAAO,CAACO,EAAG;;cAEjCZ,MAAM,CAACa,KAAM;gBACXb,MAAM,CAACc,IAAP,CAAYC,OAAZ,CAAoBC,IAApB,CAAyB,IAAzB,CAA+B;;;;AALpB,OAAf,CAFiC;AAYvCC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,+BAAuBZ,OAAO,CAACO;AAFxB;AAZ8B,KAAb,CAA5B;AAkBA,UAAMM,GAAG,GAAG,MAAMZ,QAAQ,CAACa,IAAT,EAAlB;AACA,WAAOjB,GAAG,CAACgB,GAAD,EAAO,iBAAP,CAAV;AACD,GArBD,CAqBE,OAAOE,CAAP,EAAU;AACV,WAAOf,OAAP;AACD;AACF,CA3BM","sourcesContent":["import config from \"@app/libs/config\";\nimport { getSession } from \"./getsetSession\";\n\nconst get = require(\"lodash.get\");\n\nexport const checkSession = async () => {\n  const session = await getSession();\n  if (!session) return null;\n  try {\n    const response = await fetch(config.url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: `{\n          session(where:{id:{_eq:\"${session.id}\"}}) {\n            id\n            ${config.table} {\n              ${config.user.columns.join(\"\\n\")}\n            }\n          }\n        }`\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Hasura-Session-Id\": session.id\n      }\n    });\n\n    const res = await response.json();\n    return get(res, `data.session[0]`);\n  } catch (e) {\n    return session;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}