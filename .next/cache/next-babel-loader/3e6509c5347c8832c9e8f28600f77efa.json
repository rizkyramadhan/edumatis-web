{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport config from \"../../config\";\n\nconst get = require(\"lodash.get\");\n\nexport default (async (client_id, username = \"\", password = \"\") => {\n  const query = `query ($u: String!, $c: Int!) {\n    ${config.table}(where: {_and: {${config.identifier.client_id}: {_eq: $c}, ${config.identifier.username}: {_eq: $u}}}) {\n      sessions(limit: 1, order_by: {tstamp: desc}) {\n        id\n        ${config.table} {\n          ${config.user.columns.join(\"\\n\")}\n        }\n      }\n    }\n  }`;\n  const response = await fetch(config.url, {\n    method: \"POST\",\n    body: _JSON$stringify({\n      query,\n      variables: {\n        u: username,\n        c: client_id\n      }\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-Hasura-Username\": username,\n      \"X-Hasura-Password\": password,\n      \"X-Hasura-Cid\": client_id\n    }\n  });\n  const res = await response.json();\n  return get(res, `data.${config.table}[0].sessions[0]`);\n});","map":null,"metadata":{},"sourceType":"module"}