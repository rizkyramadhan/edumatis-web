{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport config from \"../../config\";\nimport { getSession } from \"./getsetSession\";\n\nconst get = require(\"lodash.get\");\n\nexport const checkSession = async () => {\n  const session = await getSession();\n  if (!session) return null;\n\n  try {\n    const response = await fetch(config.url, {\n      method: \"POST\",\n      body: _JSON$stringify({\n        query: `{\n          session(where:{id:{_eq:\"${session.id}\"}}) {\n            id\n            ${config.table} {\n              ${config.user.columns.join(\"\\n\")}\n            }\n          }\n        }`\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Hasura-Session-Id\": session.id\n      }\n    });\n    const res = await response.json();\n    return get(res, `data.session[0]`);\n  } catch (e) {\n    return session;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}