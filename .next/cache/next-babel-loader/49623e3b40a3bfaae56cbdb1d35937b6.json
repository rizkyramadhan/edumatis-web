{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport config from \"../../config\";\nexport var hashPassword =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(user_id) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(config.url, {\n              method: \"POST\",\n              body: _JSON$stringify({\n                query: \"{\\n          session(limit:1) {\\n            id\\n          }\\n        }\"\n              }),\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-Hasura-ChangePass-Uid\": user_id\n              }\n            });\n\n          case 2:\n            res = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function hashPassword(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}