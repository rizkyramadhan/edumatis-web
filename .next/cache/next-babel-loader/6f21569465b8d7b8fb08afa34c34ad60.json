{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport rawQuery from \"../../../../../libs/queries/crud/rawQuery\";\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../../libs/ui/UIButton\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport UIList from \"../../../../../libs/ui/UIList\";\nimport UIListItem from \"../../../../../libs/ui/UIListItem\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native-web\";\nimport StackNav from \"../../../../../libs/nav/StackNav\";\nimport TransaksiDetail from \"./TransaksiDetail\";\n\nconst dayjs = require(\"dayjs\");\n\nimport RelativeTime from \"dayjs/plugin/relativeTime\";\nimport get from \"lodash.get\";\ndayjs.extend(RelativeTime);\nconst Transaksi = observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    list: [],\n    loading: true\n  });\n  useEffect(() => {\n    let fetch = async () => {\n      const result = await rawQuery(`{\n        transaksi(order_by: {tstamp: asc}) {\n          id\n          status\n          tstamp\n          amount: detail(path:\"amount\")\n          detail(path:\"status\")\n          paid(path:\"status\")\n          murid {\n            id\n            nama_murid\n            nsa\n            kelas_murids {\n              kelas {\n                nama_kelas\n              }\n            }\n          }\n          kewajiban {\n            nama_kewajiban\n          }\n        }\n      }\n      `);\n      data.list = result.transaksi;\n      data.loading = false;\n    };\n\n    fetch();\n  }, []);\n  return __jsx(UIContainer, null, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Transaksi\"\n  }, __jsx(UIButton, {\n    size: \"small\",\n    onPress: () => {\n      navigation.navigate(\"TransaksiDetail\", {\n        item: {\n          nominal: 100000,\n          kelas: {}\n        }\n      });\n    }\n  }, \"+ Transaksi Baru\")), __jsx(UIBody, null, __jsx(UIList, {\n    data: data.list,\n    loading: data.loading,\n    render: list => {\n      const item = list.item;\n      const tgl = dayjs(item.tstamp);\n      const fromday = tgl.fromNow();\n      const kelas = get(item, \"murid.kelas_murids[0].kelas.nama_kelas\") || \"Semua Kelas\";\n\n      const nominal = _parseInt(item.amount || item.nominal);\n\n      let status = (item.paid || item.detail || item.status).toLowerCase();\n      if (status === \"paid\") status = \"success\";\n      return __jsx(UIListItem, {\n        onPress: () => {\n          navigation.navigate(\"TransaksiDetail\", {\n            item: item\n          });\n        }\n      }, __jsx(View, null, __jsx(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: \"bold\",\n          color: \"#555\"\n        }\n      }, \"#\", item.id, \" \", item.kewajiban.nama_kewajiban, \" - Rp\", \" \", (nominal || 0).toLocaleString(), \" \", \"(\", status, \")\"), __jsx(Text, {\n        style: {\n          fontSize: 14\n        }\n      }, item.murid.nama_murid, \" - \", kelas)), __jsx(View, {\n        style: {\n          alignItems: \"flex-end\"\n        }\n      }, __jsx(Text, null, fromday), __jsx(Text, {\n        style: {\n          fontSize: 12\n        }\n      }, tgl.format(\"DD MMM YYYY - hh.mm\"))));\n    }\n  })));\n});\nexport default StackNav({\n  Transaksi: {\n    screen: Transaksi\n  },\n  TransaksiDetail: {\n    screen: TransaksiDetail\n  }\n});","map":null,"metadata":{},"sourceType":"module"}