{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport StackNav from \"../../../../libs/nav/StackNav\";\nimport rawQuery from \"../../../../libs/queries/crud/rawQuery\";\nimport UIBody from \"../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../libs/ui/UIButton\";\nimport UICol from \"../../../../libs/ui/UICol\";\nimport UIContainer from \"../../../../libs/ui/UIContainer\";\nimport UIHead from \"../../../../libs/ui/UIHead\";\nimport UIList from \"../../../../libs/ui/UIList\";\nimport UIListItem from \"../../../../libs/ui/UIListItem\";\nimport UIRow from \"../../../../libs/ui/UIRow\";\nimport RelativeTime from 'dayjs/plugin/relativeTime';\nimport _ from 'lodash';\nimport get from 'lodash.get';\nimport { observer, useObservable } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { ScrollView, View } from \"react-native-web\";\n\nvar dayjs = require('dayjs');\n\ndayjs.extend(RelativeTime);\nvar Report = observer(function (_ref) {\n  var navigation = _ref.navigation;\n  var data = useObservable({\n    listRaw: [],\n    filter: {\n      kewajiban: '',\n      kelas: ''\n    },\n    loading: true\n  });\n  var kelasList = {\n    '-Semua Kelas-': true\n  };\n  var kewajibanList = {\n    '-Semua Kewajiban-': true\n  };\n  var list = data.listRaw.filter(function (row) {\n    var match = true;\n\n    var kelas = _.get(row, 'murid.kelas_murids[0].kelas.nama_kelas');\n\n    var kewajiban = _.get(row, 'kewajiban.nama_kewajiban');\n\n    if (kelas && !kelasList[kelas]) {\n      kelasList[kelas] = true;\n    }\n\n    if (kewajiban && !kewajibanList[kewajiban]) {\n      kewajibanList[kewajiban] = true;\n    }\n\n    if (data.filter.kewajiban && data.filter.kewajiban !== '-Semua Kewajiban-') {\n      if (kewajiban !== data.filter.kewajiban) {\n        match = false;\n      }\n    }\n\n    if (data.filter.kelas && data.filter.kelas !== '-Semua Kelas-') {\n      if (kelas.trim() !== data.filter.kelas.trim()) {\n        match = false;\n      }\n    }\n\n    console.log(data.filter.kelas);\n    return match;\n  });\n  useEffect(function () {\n    var fetch =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return rawQuery(\"{\\n        transaksi(order_by: {tstamp: asc}) {\\n          id\\n          status\\n          tstamp\\n          amount: detail(path:\\\"amount\\\")\\n          detail(path:\\\"status\\\")\\n          paid(path:\\\"status\\\")\\n          murid {\\n            id\\n            nama_murid\\n            nsa\\n            kelas_murids {\\n              kelas {\\n                nama_kelas\\n              }\\n            }\\n          }\\n          kewajiban {\\n            nama_kewajiban\\n          }\\n        }\\n      }\\n      \");\n\n              case 2:\n                result = _context.sent;\n                data.listRaw = result.transaksi;\n                data.loading = false;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetch() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetch();\n  }, []);\n  return __jsx(UIContainer, null, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Laporan Transaksi\"\n  }, __jsx(UIButton, {\n    size: \"small\",\n    onPress: function onPress() {\n      var parse = function parse(e) {\n        var isRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        return _Object$keys(e).map(function (r) {\n          var row = e[r];\n          if (isRoot) return r;\n          return row;\n        }).join(',');\n      };\n\n      var csvList = [];\n      list.map(function (e) {\n        var res = {};\n\n        for (var i in e) {\n          var row = e[i];\n\n          if (typeof row === 'object' && row !== null) {\n            if (row.nama_kewajiban) res['nama_kewajiban'] = row.nama_kewajiban;\n\n            if (row.nama_murid) {\n              res['nama_murid'] = _.get(row, 'nama_murid');\n              res['nsa'] = _.get(row, 'nsa');\n              res['kelas'] = _.get(row, 'kelas_murids.0.kelas.nama_kelas');\n            }\n          } else res[i] = row;\n        }\n\n        csvList.push(res);\n      });\n      var csvContent = 'data:text/csv;charset=utf-8,' + parse(csvList[0], true) + '\\n' + csvList.map(function (e) {\n        return parse(e);\n      }).join('\\n');\n      var encodedUri = encodeURI(csvContent);\n      var link = document.createElement('a');\n      link.setAttribute('href', encodedUri);\n      link.setAttribute('download', 'report.csv');\n      document.body.appendChild(link); // Required for FF\n\n      link.click(); // This will download the data file named \"my_data.csv\".\n    },\n    style: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: 150\n    }\n  }, \"Download CSV\")), __jsx(UIBody, null, __jsx(UIRow, null, __jsx(\"select\", {\n    style: {\n      margin: 10\n    },\n    value: data.filter.kelas,\n    onChange: function onChange(e) {\n      data.filter.kelas = e.target.value;\n    }\n  }, _Object$keys(kelasList).map(function (i, idx) {\n    return __jsx(\"option\", {\n      value: i,\n      key: idx\n    }, i);\n  })), __jsx(\"select\", {\n    style: {\n      margin: 10\n    },\n    value: data.filter.kewajiban,\n    onChange: function onChange(e) {\n      data.filter.kewajiban = e.target.value;\n    }\n  }, _Object$keys(kewajibanList).map(function (i, idx) {\n    return __jsx(\"option\", {\n      value: i,\n      key: idx\n    }, i);\n  }))), __jsx(ScrollView, null, __jsx(View, {\n    style: {\n      flexDirection: 'row',\n      paddingLeft: 25\n    }\n  }, __jsx(UIRow, {\n    style: {\n      width: 40\n    }\n  }, __jsx(UICol, null, \"No.\")), __jsx(UIRow, {\n    style: {\n      width: 200\n    }\n  }, __jsx(UICol, null, \"Nama\")), __jsx(UIRow, {\n    style: {\n      width: 100\n    }\n  }, __jsx(UICol, null, \"Kelas\")), __jsx(UIRow, {\n    style: {\n      width: 240\n    }\n  }, __jsx(UICol, null, \"Kewajiban\")), __jsx(UIRow, {\n    style: {\n      width: 100\n    }\n  }, __jsx(UICol, null, \"Biaya (Rp)\")), __jsx(UIRow, {\n    style: {\n      width: 100\n    }\n  }, __jsx(UICol, null, \"Status\")), __jsx(UIRow, {\n    style: {\n      width: 150\n    }\n  }, __jsx(UICol, null, \"Waktu\")), __jsx(UIRow, {\n    style: {\n      width: 150\n    }\n  }, __jsx(UICol, null, \"Log\"))), __jsx(UIList, {\n    data: list,\n    loading: data.loading,\n    render: function render(list) {\n      var item = list.item;\n      var tgl = dayjs(item.tstamp);\n      var fromday = tgl.fromNow();\n      var kelas = get(item, 'murid.kelas_murids[0].kelas.nama_kelas') || 'Semua Kelas';\n\n      var nominal = _parseInt(item.amount || item.nominal);\n\n      var status = (item.paid || item.detail || item.status).toLowerCase();\n      if (status === 'paid') status = 'success';\n      return __jsx(UIListItem, {\n        onPress: function onPress() {\n          navigation.navigate('TransaksiDetail', {\n            item: item\n          });\n        }\n      }, __jsx(View, {\n        style: {\n          flexDirection: 'row'\n        }\n      }, __jsx(UIRow, {\n        style: {\n          width: 40\n        }\n      }, __jsx(UICol, null, item.id)), __jsx(UIRow, {\n        style: {\n          width: 200\n        }\n      }, __jsx(UICol, null, item.murid.nama_murid)), __jsx(UIRow, {\n        style: {\n          width: 100\n        }\n      }, __jsx(UICol, null, kelas)), __jsx(UIRow, {\n        style: {\n          width: 240\n        }\n      }, __jsx(UICol, null, item.kewajiban.nama_kewajiban)), __jsx(UIRow, {\n        style: {\n          width: 100\n        }\n      }, __jsx(UICol, null, (nominal || 0).toLocaleString())), __jsx(UIRow, {\n        style: {\n          width: 100\n        }\n      }, __jsx(UICol, null, status)), __jsx(UIRow, {\n        style: {\n          width: 150\n        }\n      }, __jsx(UICol, null, tgl.format('DD MMM YYYY - hh.mm'))), __jsx(UIRow, {\n        style: {\n          width: 150\n        }\n      }, __jsx(UICol, null, fromday))));\n    }\n  }))));\n});\nexport default StackNav({\n  Report: {\n    screen: Report\n  }\n});","map":null,"metadata":{},"sourceType":"module"}