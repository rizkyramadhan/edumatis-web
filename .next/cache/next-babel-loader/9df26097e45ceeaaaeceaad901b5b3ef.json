{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport config from \"../../config\";\nimport { AsyncStorage } from \"react-native-web\";\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(query, options) {\n    var opt, headers, sessionRaw, session, response, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            opt = _objectSpread({}, {\n              useSession: true,\n              debug: false,\n              where: {},\n              args: \"limit:1\"\n            }, options);\n            headers = {\n              \"Content-Type\": \"application/json\"\n            };\n\n            if (!opt.useSession) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 5;\n            return AsyncStorage.getItem(\"SESSION\");\n\n          case 5:\n            sessionRaw = _context.sent;\n            session = JSON.parse(sessionRaw || \"false\");\n\n            if (session) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 11:\n            headers[\"X-Hasura-Session-Id\"] = session.id;\n\n          case 12:\n            _context.next = 14;\n            return fetch(config.url, {\n              method: \"POST\",\n              body: _JSON$stringify({\n                query: query\n              }),\n              headers: headers\n            });\n\n          case 14:\n            response = _context.sent;\n            _context.next = 17;\n            return response.json();\n\n          case 17:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json.data);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":null,"metadata":{},"sourceType":"module"}