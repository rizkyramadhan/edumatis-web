{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport rawQuery from \"../../../../../libs/queries/crud/rawQuery\";\nimport UICol from \"../../../../../libs/ui/UICol\";\nimport UIField from \"../../../../../libs/ui/UIField\";\nimport UIFieldSelectNative from \"../../../../../libs/ui/UIFieldSelectNative\";\nimport UIRow from \"../../../../../libs/ui/UIRow\";\nimport { getUnique } from \"../../../../../libs/utils/GraphQL\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native-web\";\nexport default observer(function (_ref) {\n  var form = _ref.form,\n      renderMurid = _ref.renderMurid,\n      renderKelas = _ref.renderKelas,\n      renderKelasTitle = _ref.renderKelasTitle;\n  var data = useObservable({\n    expandKelas: [],\n    kelas: [],\n    kelasMurid: {}\n  });\n  useEffect(function () {\n    data.kelas = [];\n    rawQuery(\"{\\n        kelas {\\n          id \\n          nama_kelas\\n        }\\n      }\").then(function (res) {\n      data.kelas = res.kelas;\n    });\n  }, []);\n  return __jsx(UIRow, null, __jsx(UICol, {\n    size: 6,\n    sizexs: 12,\n    sizesm: 12,\n    sizemd: 12\n  }, __jsx(UIField, {\n    label: \"Berlaku untuk kelas:\"\n  }, data.kelas && data.kelas.map(function (k, index) {\n    var allkelas = form.kelas || {};\n    var kelas = allkelas[k.id];\n    return __jsx(View, {\n      key: k.id,\n      style: {\n        borderBottomWidth: index + 1 === data.kelas.length ? 0 : 1,\n        marginHorizontal: -12,\n        padding: 5,\n        paddingHorizontal: 12,\n        borderBottomColor: \"#ddd\"\n      }\n    }, __jsx(TouchableOpacity, {\n      onPress:\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, kelasMurid;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (data.kelasMurid[k.id]) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return rawQuery(\"{\\n                                murid(where: {kelas_murids: {kelas_id: {_eq: \".concat(k.id, \"}}}) {\\n                                  id\\n                                  nama_murid\\n                                }\\n                              }\\n                              \"));\n\n              case 3:\n                res = _context.sent;\n\n                if (res && res.murid) {\n                  kelasMurid = res.murid.map(function (m) {\n                    return {\n                      value: m.id,\n                      label: m.nama_murid\n                    };\n                  });\n                  data.kelasMurid[k.id] = [{\n                    value: 0,\n                    label: \"\"\n                  }].concat(_toConsumableArray(kelasMurid));\n                }\n\n              case 5:\n                if (kelas) {\n                  data.expandKelas = [k.id];\n                } else {\n                  allkelas[k.id] = {\n                    nominal: form.nominal,\n                    murid: [{}]\n                  };\n                  data.expandKelas = [k.id];\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))\n    }, __jsx(Text, {\n      style: {\n        fontSize: 17,\n        height: 25\n      }\n    }, kelas ? \"☑\" : \"☐\", \"\\xA0\", k.nama_kelas)), kelas && __jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        marginLeft: 30,\n        alignItems: \"center\",\n        position: \"absolute\",\n        right: 10\n      }\n    }, renderKelasTitle && renderKelasTitle(kelas, k), __jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        allkelas[k.id] = undefined;\n      }\n    }, __jsx(Text, {\n      style: {\n        color: \"red\"\n      }\n    }, \" Hapus\"))), kelas && data.expandKelas.indexOf(k.id) >= 0 && __jsx(View, null, renderKelas && renderKelas(kelas, k), kelas.murid.map(function (murid, midx) {\n      return __jsx(UIRow, {\n        key: midx,\n        style: {\n          flexDirection: \"row\"\n        }\n      }, __jsx(UICol, {\n        size: 6\n      }, __jsx(UIFieldSelectNative, {\n        label: \"Murid\",\n        items: data.kelasMurid[k.id] || [],\n        value: murid.id || 0,\n        setValue: function setValue(value) {\n          value = _parseInt(value);\n          murid.id = value;\n          var unique = getUnique(kelas.murid, \"id\").filter(function (m) {\n            return m.id !== 0;\n          });\n          kelas.murid.splice(0, kelas.murid.length);\n          unique.forEach(function (m) {\n            kelas.murid.push(m);\n          });\n          kelas.murid.push({\n            id: 0\n          });\n        }\n      })), renderMurid && renderMurid(murid, kelas, k));\n    })));\n  }))));\n});","map":null,"metadata":{},"sourceType":"module"}