{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { AsyncStorage } from \"react-native-web\";\nimport query from \"../crud/query\";\nimport config from \"../../config\";\nexport function setSession(_x) {\n  return _setSession.apply(this, arguments);\n}\n\nfunction _setSession() {\n  _setSession = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(value) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return AsyncStorage.setItem(\"SESSION\", _JSON$stringify(value));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 5]]);\n  }));\n  return _setSession.apply(this, arguments);\n}\n\nexport function getSession() {\n  return _getSession.apply(this, arguments);\n}\n\nfunction _getSession() {\n  _getSession = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var loadFromCache,\n        sessionRaw,\n        session,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            loadFromCache = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : true;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return AsyncStorage.getItem(\"SESSION\");\n\n          case 4:\n            sessionRaw = _context2.sent;\n\n            if (!(sessionRaw !== null)) {\n              _context2.next = 13;\n              break;\n            }\n\n            session = JSON.parse(sessionRaw);\n\n            if (!(loadFromCache === false)) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 10;\n            return query(\"user\", _toConsumableArray(config.user.columns), {\n              where: {\n                username: session.user.username\n              }\n            });\n\n          case 10:\n            session.user = _context2.sent;\n            setSession(session);\n\n          case 12:\n            return _context2.abrupt(\"return\", session);\n\n          case 13:\n            return _context2.abrupt(\"return\", null);\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", null);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 16]]);\n  }));\n  return _getSession.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}