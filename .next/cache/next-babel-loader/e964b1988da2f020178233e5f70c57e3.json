{"ast":null,"code":"var _jsxFileName = \"/Users/riz/Documents/edumatis-web/pages/app/screens/admin/EditProfile.tsx\";\nvar __jsx = React.createElement;\nimport UIBody from \"../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../libs/ui/UIButton\";\nimport UIContainer from \"../../../../libs/ui/UIContainer\";\nimport UIFieldText from \"../../../../libs/ui/UIFieldText\";\nimport UIHead from \"../../../../libs/ui/UIHead\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Text, Alert, Platform } from \"react-native-web\";\nimport { getSession } from \"../../../../libs/queries/user/getsetSession\";\nimport updateRecord from \"../../../../libs/queries/crud/updateRecord\";\nimport { hashPassword } from \"../../../../libs/queries/user/hashPassword\";\nexport default observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    new1: \"\",\n    new2: \"\",\n    old: \"\",\n    loading: false\n  });\n  return __jsx(UIContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Ubah Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(UIBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(UIFieldText, {\n    type: \"password\",\n    label: \"Password Lama\",\n    value: data.old,\n    setValue: value => data.old = value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(UIFieldText, {\n    type: \"password\",\n    label: \"Password Baru\",\n    value: data.new1,\n    setValue: value => data.new1 = value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(UIFieldText, {\n    type: \"password\",\n    label: \"Ulangi Password Baru\",\n    value: data.new2,\n    setValue: value => data.new2 = value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), data.loading ? __jsx(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Loading...\") : __jsx(UIButton, {\n    onPress: async () => {\n      const a = Platform.OS === \"web\" ? alert : Alert.alert;\n      const session = await getSession();\n\n      if (!data.new1 || !data.new2 || !data.old) {\n        a(\"Mohon isi password dengan lengkap\");\n        return false;\n      }\n\n      if (data.new1 !== data.new2) {\n        a(\"Password tidak sama \");\n        return false;\n      }\n\n      data.loading = true;\n      const response = await fetch(\"https://backend.cap.edumatis.id\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Hasura-Username\": session.nama_sekolah.nsa,\n          \"X-Hasura-Password\": data.old,\n          \"X-Hasura-Cid\": session.nama_sekolah + \"\"\n        }\n      });\n      let res = await response.json();\n      console.log(res, {\n        \"Content-Type\": \"application/json\",\n        \"X-Hasura-Username\": session.nama_sekolah.nsa,\n        \"X-Hasura-Password\": data.old,\n        \"X-Hasura-Cid\": session.nama_sekolah + \"\"\n      });\n\n      if (res[\"X-Hasura-Role\"] !== \"anonymous\") {\n        await updateRecord(\"nama_sekolah\", {\n          id: session.nama_sekolah.id,\n          password: data.new1\n        });\n        await hashPassword(session.nama_sekolah.id);\n        a(\"Password berhasil di-ubah!\");\n      } else {\n        a(\"Password lama salah\");\n      }\n\n      data.loading = false;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Ubah Password\")));\n});","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/pages/app/screens/admin/EditProfile.tsx"],"names":["UIBody","UIButton","UIContainer","UIFieldText","UIHead","observer","useObservable","React","Text","Alert","Platform","getSession","updateRecord","hashPassword","navigation","data","new1","new2","old","loading","value","a","OS","alert","session","response","fetch","method","headers","nama_sekolah","nsa","res","json","console","log","id","password"],"mappings":"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","sourcesContent":["import UIBody from \"@app/libs/ui/UIBody\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport UIContainer from \"@app/libs/ui/UIContainer\";\nimport UIFieldText from \"@app/libs/ui/UIFieldText\";\nimport UIHead from \"@app/libs/ui/UIHead\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Text, Alert, Platform } from \"react-native\";\nimport { getSession } from \"@app/libs/queries/user/getsetSession\";\nimport updateRecord from \"@app/libs/queries/crud/updateRecord\";\nimport { hashPassword } from \"@app/libs/queries/user/hashPassword\";\n\nexport default observer(({ navigation }: any) => {\n  const data = useObservable({\n    new1: \"\",\n    new2: \"\",\n    old: \"\",\n    loading: false\n  });\n  return (\n    <UIContainer>\n      <UIHead navigation={navigation} title=\"Ubah Password\" />\n      <UIBody>\n        <UIFieldText\n          type=\"password\"\n          label=\"Password Lama\"\n          value={data.old}\n          setValue={(value: string) => (data.old = value)}\n        />\n\n        <UIFieldText\n          type=\"password\"\n          label=\"Password Baru\"\n          value={data.new1}\n          setValue={(value: string) => (data.new1 = value)}\n        />\n\n        <UIFieldText\n          type=\"password\"\n          label=\"Ulangi Password Baru\"\n          value={data.new2}\n          setValue={(value: string) => (data.new2 = value)}\n        />\n\n        {data.loading ? (\n          <Text>Loading...</Text>\n        ) : (\n          <UIButton\n            onPress={async () => {\n              const a = Platform.OS === \"web\" ? alert : Alert.alert;\n\n              const session = await getSession();\n\n              if (!data.new1 || !data.new2 || !data.old) {\n                a(\"Mohon isi password dengan lengkap\");\n                return false;\n              }\n              if (data.new1 !== data.new2) {\n                a(\"Password tidak sama \");\n                return false;\n              }\n              data.loading = true;\n\n              const response: Response = await fetch(\n                \"https://backend.cap.edumatis.id\",\n                {\n                  method: \"GET\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-Hasura-Username\": session.nama_sekolah.nsa,\n                    \"X-Hasura-Password\": data.old,\n                    \"X-Hasura-Cid\": session.nama_sekolah + \"\"\n                  }\n                }\n              );\n              let res = await response.json();\n              console.log(res, {\n                \"Content-Type\": \"application/json\",\n                \"X-Hasura-Username\": session.nama_sekolah.nsa,\n                \"X-Hasura-Password\": data.old,\n                \"X-Hasura-Cid\": session.nama_sekolah + \"\"\n              });\n              if (res[\"X-Hasura-Role\"] !== \"anonymous\") {\n                await updateRecord(\"nama_sekolah\", {\n                  id: session.nama_sekolah.id,\n                  password: data.new1\n                });\n                await hashPassword(session.nama_sekolah.id);\n                a(\"Password berhasil di-ubah!\");\n              } else {\n                a(\"Password lama salah\");\n              }\n\n              data.loading = false;\n            }}\n          >\n            Ubah Password\n          </UIButton>\n        )}\n      </UIBody>\n    </UIContainer>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}