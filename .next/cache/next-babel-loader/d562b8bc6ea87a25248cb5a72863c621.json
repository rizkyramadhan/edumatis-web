{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport login from \"../queries/user/login\";\nimport { flow, types } from 'mobx-state-tree';\nimport AsyncStorage from \"../utils/AsyncStorage\";\nimport { UserRecord } from \"./User\";\nimport List from \"../utils/List\";\nimport Record from \"../utils/Record\";\nimport config from \"../config\";\nimport rawQuery from \"../queries/crud/rawQuery\";\nexport const SessionRecord = Record({\n  tableName: 'session',\n  columns: {\n    id: types.maybe(types.string),\n    client_id: types.maybe(types.integer),\n    user: UserRecord\n  },\n  actions: self => ({\n    login: flow(function* (client_id, username, password) {\n      try {\n        const response = yield login(client_id, username, password);\n        yield AsyncStorage.setItem('SESSION', _JSON$stringify(response));\n        const result = yield rawQuery(`{\n          kelas_murid(where: {murid_id: {_eq: ${response.murid.id}}}) {\n            kelas {\n              sekolah {\n                id\n                margin\n                nama_sekolah\n              }\n              nama_kelas\n              id\n            }\n          }\n        }`);\n\n        if (result) {\n          response.kelas = {\n            id: result.kelas_murid[0].kelas.id,\n            nama: result.kelas_murid[0].kelas.nama_kelas\n          };\n          response.sekolah = {\n            id: result.kelas_murid[0].kelas.sekolah.id,\n            margin: result.kelas_murid[0].kelas.sekolah.margin,\n            nama: result.kelas_murid[0].kelas.sekolah.nama_sekolah\n          };\n        }\n\n        yield AsyncStorage.setItem('SESSION', _JSON$stringify(response));\n        return response;\n      } catch (e) {\n        console.warn(e);\n        return false;\n      }\n    }),\n    restore: function (session) {\n      self.id = session.id;\n      self[config.table + '_id'] = session[config.table + '_id'];\n      self[config.table] = session[config.table];\n    },\n    logout: flow(function* () {\n      yield AsyncStorage.removeItem('SESSION');\n      self.id = null;\n      self[config.table + '_id'] = null;\n      self[config.table] = null;\n    })\n  })\n});\nexport const SessionList = List({\n  record: SessionRecord,\n  query: `{\n    id\n    user_id\n  }`\n});","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/libs/stores/Session.ts"],"names":["login","flow","types","AsyncStorage","UserRecord","List","Record","config","rawQuery","SessionRecord","tableName","columns","id","maybe","string","client_id","integer","user","actions","self","username","password","response","setItem","result","murid","kelas","kelas_murid","nama","nama_kelas","sekolah","margin","nama_sekolah","e","console","warn","restore","session","table","logout","removeItem","SessionList","record","query"],"mappings":";AAAA,OAAOA,KAAP;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,OAAOC,YAAP;AACA,SAASC,UAAT;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AAEA,OAAO,MAAMC,aAAa,GAAGH,MAAM,CAAC;AAClCI,EAAAA,SAAS,EAAE,SADuB;AAElCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,EAAE,EAAEV,KAAK,CAACW,KAAN,CAAYX,KAAK,CAACY,MAAlB,CADG;AAEPC,IAAAA,SAAS,EAAEb,KAAK,CAACW,KAAN,CAAYX,KAAK,CAACc,OAAlB,CAFJ;AAGPC,IAAAA,IAAI,EAAEb;AAHC,GAFyB;AAOlCc,EAAAA,OAAO,EAAGC,IAAD,KAAgB;AACvBnB,IAAAA,KAAK,EAAEC,IAAI,CAAC,WAAUc,SAAV,EAAqBK,QAArB,EAA+BC,QAA/B,EAAyC;AACnD,UAAI;AACF,cAAMC,QAAa,GAAG,MAAMtB,KAAK,CAACe,SAAD,EAAYK,QAAZ,EAAsBC,QAAtB,CAAjC;AACA,cAAMlB,YAAY,CAACoB,OAAb,CAAqB,SAArB,EAAgC,gBAAeD,QAAf,CAAhC,CAAN;AACA,cAAME,MAAW,GAAG,MAAMhB,QAAQ,CAAE;gDACIc,QAAQ,CAACG,KAAT,CAAeb,EAAG;;;;;;;;;;;UADxB,CAAlC;;AAaA,YAAIY,MAAJ,EAAY;AACVF,UAAAA,QAAQ,CAACI,KAAT,GAAiB;AACfd,YAAAA,EAAE,EAAEY,MAAM,CAACG,WAAP,CAAmB,CAAnB,EAAsBD,KAAtB,CAA4Bd,EADjB;AAEfgB,YAAAA,IAAI,EAAEJ,MAAM,CAACG,WAAP,CAAmB,CAAnB,EAAsBD,KAAtB,CAA4BG;AAFnB,WAAjB;AAKAP,UAAAA,QAAQ,CAACQ,OAAT,GAAmB;AACjBlB,YAAAA,EAAE,EAAEY,MAAM,CAACG,WAAP,CAAmB,CAAnB,EAAsBD,KAAtB,CAA4BI,OAA5B,CAAoClB,EADvB;AAEjBmB,YAAAA,MAAM,EAAEP,MAAM,CAACG,WAAP,CAAmB,CAAnB,EAAsBD,KAAtB,CAA4BI,OAA5B,CAAoCC,MAF3B;AAGjBH,YAAAA,IAAI,EAAEJ,MAAM,CAACG,WAAP,CAAmB,CAAnB,EAAsBD,KAAtB,CAA4BI,OAA5B,CAAoCE;AAHzB,WAAnB;AAKD;;AACD,cAAM7B,YAAY,CAACoB,OAAb,CAAqB,SAArB,EAAgC,gBAAeD,QAAf,CAAhC,CAAN;AACA,eAAOA,QAAP;AACD,OA9BD,CA8BE,OAAOW,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACA,eAAO,KAAP;AACD;AACF,KAnCU,CADY;AAqCvBG,IAAAA,OAAO,EAAE,UAASC,OAAT,EAAuB;AAC9BlB,MAAAA,IAAI,CAACP,EAAL,GAAUyB,OAAO,CAACzB,EAAlB;AACAO,MAAAA,IAAI,CAACZ,MAAM,CAAC+B,KAAP,GAAe,KAAhB,CAAJ,GAA6BD,OAAO,CAAC9B,MAAM,CAAC+B,KAAP,GAAe,KAAhB,CAApC;AACAnB,MAAAA,IAAI,CAACZ,MAAM,CAAC+B,KAAR,CAAJ,GAAqBD,OAAO,CAAC9B,MAAM,CAAC+B,KAAR,CAA5B;AACD,KAzCsB;AA0CvBC,IAAAA,MAAM,EAAEtC,IAAI,CAAC,aAAY;AACvB,YAAME,YAAY,CAACqC,UAAb,CAAwB,SAAxB,CAAN;AACArB,MAAAA,IAAI,CAACP,EAAL,GAAU,IAAV;AACAO,MAAAA,IAAI,CAACZ,MAAM,CAAC+B,KAAP,GAAe,KAAhB,CAAJ,GAA6B,IAA7B;AACAnB,MAAAA,IAAI,CAACZ,MAAM,CAAC+B,KAAR,CAAJ,GAAqB,IAArB;AACD,KALW;AA1CW,GAAhB;AAPyB,CAAD,CAA5B;AA0DP,OAAO,MAAMG,WAAW,GAAGpC,IAAI,CAAC;AAC9BqC,EAAAA,MAAM,EAAEjC,aADsB;AAE9BkC,EAAAA,KAAK,EAAG;;;;AAFsB,CAAD,CAAxB","sourcesContent":["import login from '@app/libs/queries/user/login';\nimport { flow, types } from 'mobx-state-tree';\nimport AsyncStorage from '@app/libs/utils/AsyncStorage';\nimport { UserRecord } from './User';\nimport List from '@app/libs/utils/List';\nimport Record from '@app/libs/utils/Record';\nimport config from '@app/libs/config';\nimport rawQuery from '@app/libs/queries/crud/rawQuery';\n\nexport const SessionRecord = Record({\n  tableName: 'session',\n  columns: {\n    id: types.maybe(types.string),\n    client_id: types.maybe(types.integer),\n    user: UserRecord\n  },\n  actions: (self: any) => ({\n    login: flow(function*(client_id, username, password) {\n      try {\n        const response: any = yield login(client_id, username, password);\n        yield AsyncStorage.setItem('SESSION', JSON.stringify(response));\n        const result: any = yield rawQuery(`{\n          kelas_murid(where: {murid_id: {_eq: ${response.murid.id}}}) {\n            kelas {\n              sekolah {\n                id\n                margin\n                nama_sekolah\n              }\n              nama_kelas\n              id\n            }\n          }\n        }`);\n        if (result) {\n          response.kelas = {\n            id: result.kelas_murid[0].kelas.id,\n            nama: result.kelas_murid[0].kelas.nama_kelas\n          };\n\n          response.sekolah = {\n            id: result.kelas_murid[0].kelas.sekolah.id,\n            margin: result.kelas_murid[0].kelas.sekolah.margin,\n            nama: result.kelas_murid[0].kelas.sekolah.nama_sekolah\n          };\n        }\n        yield AsyncStorage.setItem('SESSION', JSON.stringify(response));\n        return response;\n      } catch (e) {\n        console.warn(e);\n        return false;\n      }\n    }),\n    restore: function(session: any) {\n      self.id = session.id;\n      self[config.table + '_id'] = session[config.table + '_id'];\n      self[config.table] = session[config.table];\n    },\n    logout: flow(function*() {\n      yield AsyncStorage.removeItem('SESSION');\n      self.id = null;\n      self[config.table + '_id'] = null;\n      self[config.table] = null;\n    })\n  })\n});\n\nexport const SessionList = List({\n  record: SessionRecord,\n  query: `{\n    id\n    user_id\n  }`\n});\n"]},"metadata":{},"sourceType":"module"}