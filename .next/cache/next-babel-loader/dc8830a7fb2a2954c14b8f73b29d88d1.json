{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UICol from \"../../../../../libs/ui/UICol\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIFieldText from \"../../../../../libs/ui/UIFieldText\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport UIRow from \"../../../../../libs/ui/UIRow\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React from \"react\";\nimport UIFieldSelectNative from \"../../../../../libs/ui/UIFieldSelectNative\";\nimport KelasPicker from \"../Kelas/KelasPicker\";\nimport { Text, Platform, Alert } from \"react-native-web\";\nimport UIButton from \"../../../../../libs/ui/UIButton\";\nimport updateRecord from \"../../../../../libs/queries/crud/updateRecord\";\nimport createRecord from \"../../../../../libs/queries/crud/createRecord\";\nimport deleteRecord from \"../../../../../libs/queries/crud/deleteRecord\";\nexport default observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    loading: true,\n    form: (navigation || {\n      getParam: () => ({})\n    }).getParam(\"item\")\n  });\n  return __jsx(UIContainer, null, __jsx(UIHead, {\n    navigation: navigation,\n    title: ` Pengumuman ` + (data.form.id ? `#${data.form.id}` : `Baru`),\n    onBack: () => {\n      navigation.goBack();\n    }\n  }, __jsx(UIRow, null, __jsx(UIButton, {\n    onPress: async () => {\n      if (data.form.id) {\n        data.form.id = _parseInt(data.form.id);\n        await updateRecord(\"pengumuman\", data.form);\n      } else {\n        await createRecord(\"pengumuman\", data.form);\n      }\n\n      navigation.goBack();\n    }\n  }, \"Simpan\"), __jsx(UIButton, {\n    style: {\n      backgroundColor: \"red\",\n      marginLeft: -5\n    },\n    onPress: async () => {\n      if (Platform.OS === \"web\") {\n        if (confirm(\"Apakah anda yakin ingin menghapus pengumuman ini ?\")) {\n          if (data.form.id) {\n            await deleteRecord(\"pengumuman\", {\n              id: data.form.id\n            });\n          }\n\n          navigation.goBack();\n        }\n      } else {\n        Alert.alert(\"Menghapus Kewajiban\", \"Apakah Anda yakin ingin menghapus pengumuman ini ?\", [{\n          text: \"NO\",\n          style: \"cancel\",\n          onPress: () => {}\n        }, {\n          text: \"YES\",\n          onPress: async () => {\n            if (data.form.id) {\n              await deleteRecord(\"pengumuman\", {\n                id: data.form.id\n              });\n            }\n\n            navigation.goBack();\n          }\n        }]);\n      }\n    }\n  }, \"Hapus\"))), __jsx(UIBody, null, __jsx(UIFieldText, {\n    label: \"Text Pengumuman\",\n    setValue: value => {\n      data.form.pengumuman = value;\n    },\n    value: data.form.pengumuman\n  }), __jsx(UIRow, null, __jsx(UICol, {\n    size: 4\n  }, __jsx(UIFieldSelectNative, {\n    label: \"Status\",\n    items: [{\n      value: \"aktif\",\n      label: \"Aktif\"\n    }, {\n      value: \"non-aktif\",\n      label: \"Non-Aktif\"\n    }],\n    value: data.form.status,\n    setValue: v => {\n      data.form.status = v;\n    }\n  }))), __jsx(KelasPicker, {\n    form: data.form,\n    renderKelas: (kelas, detail) => {\n      return __jsx(Text, {\n        style: {\n          paddingLeft: 15,\n          paddingVertical: 10,\n          color: \"#333\"\n        }\n      }, _Object$keys(kelas.murid).length === 1 ? `Untuk semua murid di kelas ${detail.nama_kelas}` : `Khusus untuk murid dibawah ini`);\n    }\n  })));\n});","map":null,"metadata":{},"sourceType":"module"}