{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/riz/Documents/edumatis-web/pages/app/screens/admin/Kelas/KelasDetail.tsx\";\nvar __jsx = React.createElement;\nimport createRecord from \"../../../../../libs/queries/crud/createRecord\";\nimport rawQuery from \"../../../../../libs/queries/crud/rawQuery\";\nimport updateRecord from \"../../../../../libs/queries/crud/updateRecord\";\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../../libs/ui/UIButton\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIFieldText from \"../../../../../libs/ui/UIFieldText\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport MuridList from \"./MuridList\";\nexport default observer(function (_ref) {\n  var navigation = _ref.navigation;\n  var data = useObservable({\n    loading: true,\n    murids: [],\n    form: (navigation || {\n      getParam: function getParam() {\n        return {};\n      }\n    }).getParam(\"item\")\n  });\n  useEffect(function () {\n    var fetch =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return rawQuery(\"{\\n        murid(where: {kelas_murids: {kelas_id: {_eq: \".concat(data.form.id, \"}}}) {\\n          id\\n          email\\n          data\\n          is_active\\n          nisn\\n          no_akta_kelahiran\\n          nsa\\n          tgl_lahir\\n          updated_at\\n          nama_murid\\n        }\\n      }\\n      \"));\n\n              case 2:\n                res = _context.sent;\n                data.murids = res.murid;\n                data.loading = false;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetch() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetch();\n  }, []);\n  return __jsx(UIContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(UIHead, {\n    navigation: navigation,\n    title: \" Kelas \" + (data.form.id ? \"#\".concat(data.form.id) : \"Baru\"),\n    onBack: function onBack() {\n      navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(UIButton, {\n    onPress:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var form;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              form = _objectSpread({}, data.form);\n              delete form.kelas_murids_aggregate;\n\n              if (!form.id) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 5;\n              return updateRecord(\"kelas\", form);\n\n            case 5:\n              _context2.next = 9;\n              break;\n\n            case 7:\n              _context2.next = 9;\n              return createRecord(\"kelas\", form);\n\n            case 9:\n              navigation.goBack();\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Simpan\")), __jsx(UIBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(UIFieldText, {\n    label: \"Nama Kelas\",\n    setValue: function setValue(value) {\n      data.form.nama_kelas = value;\n    },\n    value: data.form.nama_kelas || \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(MuridList, {\n    kelas: data.form,\n    list: data.murids,\n    loading: data.loading,\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/pages/app/screens/admin/Kelas/KelasDetail.tsx"],"names":["createRecord","rawQuery","updateRecord","UIBody","UIButton","UIContainer","UIFieldText","UIHead","observer","useObservable","React","useEffect","MuridList","navigation","data","loading","murids","form","getParam","fetch","id","res","murid","goBack","kelas_murids_aggregate","value","nama_kelas"],"mappings":"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","sourcesContent":["import createRecord from \"@app/libs/queries/crud/createRecord\";\nimport rawQuery from \"@app/libs/queries/crud/rawQuery\";\nimport updateRecord from \"@app/libs/queries/crud/updateRecord\";\nimport UIBody from \"@app/libs/ui/UIBody\";\nimport UIButton from \"@app/libs/ui/UIButton\";\nimport UIContainer from \"@app/libs/ui/UIContainer\";\nimport UIFieldText from \"@app/libs/ui/UIFieldText\";\nimport UIHead from \"@app/libs/ui/UIHead\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport MuridList from \"./MuridList\";\n\nexport default observer(({ navigation }: any) => {\n  const data = useObservable({\n    loading: true,\n    murids: [],\n    form: (navigation || { getParam: () => ({})}).getParam(\"item\")\n  });\n\n  useEffect(() => {\n    const fetch = async function() {\n      let res = await rawQuery(`{\n        murid(where: {kelas_murids: {kelas_id: {_eq: ${data.form.id}}}}) {\n          id\n          email\n          data\n          is_active\n          nisn\n          no_akta_kelahiran\n          nsa\n          tgl_lahir\n          updated_at\n          nama_murid\n        }\n      }\n      `);\n      data.murids = res.murid;\n      data.loading = false;\n    };\n    fetch();\n  }, []);\n\n  return (\n    <UIContainer>\n      <UIHead\n        navigation={navigation}\n        title={` Kelas ` + (data.form.id ? `#${data.form.id}` : `Baru`)}\n        onBack={() => {\n          navigation.goBack();\n        }}\n      >\n        <UIButton\n          onPress={async () => {\n            const form = { ...data.form };\n            delete form.kelas_murids_aggregate;\n            if (form.id) {\n              await updateRecord(\"kelas\", form);\n            } else {\n              await createRecord(\"kelas\", form);\n            }\n            navigation.goBack();\n          }}\n        >\n          Simpan\n        </UIButton>\n      </UIHead>\n      <UIBody>\n        <UIFieldText\n          label=\"Nama Kelas\"\n          setValue={(value: any) => {\n            data.form.nama_kelas = value;\n          }}\n          value={data.form.nama_kelas || \"\"}\n        />\n        <MuridList\n          kelas={data.form}\n          list={data.murids}\n          loading={data.loading}\n          navigation={navigation}\n        />\n      </UIBody>\n    </UIContainer>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}