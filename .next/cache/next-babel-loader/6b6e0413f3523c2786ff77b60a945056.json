{"ast":null,"code":"var __jsx = React.createElement;\nimport UIBody from \"../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../libs/ui/UIButton\";\nimport UIContainer from \"../../../../libs/ui/UIContainer\";\nimport UIFieldText from \"../../../../libs/ui/UIFieldText\";\nimport UIHead from \"../../../../libs/ui/UIHead\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Text, Alert, Platform } from \"react-native-web\";\nimport { getSession } from \"../../../../libs/queries/user/getsetSession\";\nimport updateRecord from \"../../../../libs/queries/crud/updateRecord\";\nimport { hashPassword } from \"../../../../libs/queries/user/hashPassword\";\nexport default observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    new1: \"\",\n    new2: \"\",\n    old: \"\",\n    loading: false\n  });\n  return __jsx(UIContainer, null, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Ubah Password\"\n  }), __jsx(UIBody, null, __jsx(UIFieldText, {\n    type: \"password\",\n    label: \"Password Lama\",\n    value: data.old,\n    setValue: value => data.old = value\n  }), __jsx(UIFieldText, {\n    type: \"password\",\n    label: \"Password Baru\",\n    value: data.new1,\n    setValue: value => data.new1 = value\n  }), __jsx(UIFieldText, {\n    type: \"password\",\n    label: \"Ulangi Password Baru\",\n    value: data.new2,\n    setValue: value => data.new2 = value\n  }), data.loading ? __jsx(Text, null, \"Loading...\") : __jsx(UIButton, {\n    onPress: async () => {\n      const a = Platform.OS === \"web\" ? alert : Alert.alert;\n      const session = await getSession();\n\n      if (!data.new1 || !data.new2 || !data.old) {\n        a(\"Mohon isi password dengan lengkap\");\n        return false;\n      }\n\n      if (data.new1 !== data.new2) {\n        a(\"Password tidak sama \");\n        return false;\n      }\n\n      data.loading = true;\n      const response = await fetch(\"https://backend.cap.edumatis.id\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Hasura-Username\": session.murid.nsa,\n          \"X-Hasura-Password\": data.old,\n          \"X-Hasura-Cid\": session.murid.sekolah_id + \"\"\n        }\n      });\n      let res = await response.json();\n      console.log(res, {\n        \"Content-Type\": \"application/json\",\n        \"X-Hasura-Username\": session.murid.nsa,\n        \"X-Hasura-Password\": data.old,\n        \"X-Hasura-Cid\": session.murid.sekolah_id + \"\"\n      });\n\n      if (res[\"X-Hasura-Role\"] !== \"anonymous\") {\n        await updateRecord(\"murid\", {\n          id: session.murid.id,\n          password: data.new1\n        });\n        await hashPassword(session.murid.id);\n        a(\"Password berhasil di-ubah!\");\n      } else {\n        a(\"Password lama salah\");\n      }\n\n      data.loading = false;\n    }\n  }, \"Ubah Password\")));\n});","map":null,"metadata":{},"sourceType":"module"}