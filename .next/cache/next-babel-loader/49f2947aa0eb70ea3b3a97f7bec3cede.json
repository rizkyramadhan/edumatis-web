{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/riz/Documents/edumatis-web/libs/nav/SideNav.tsx\";\nvar __jsx = React.createElement;\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect, useRef } from \"react\";\nimport { TouchableOpacity, View } from \"react-native-web\";\nimport { Responsive, ResponsiveHandler } from \"../ui/Style\";\nimport NavContainer from \"./NavContainer\";\nconst absoluteSideBar = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  width: \"30%\",\n  flexDirection: \"row\",\n  alignItems: \"stretch\",\n  zIndex: 99\n};\nconst flexSideBar = {\n  width: \"30%\",\n  maxWidth: 280,\n  flexDirection: \"row\",\n  alignItems: \"stretch\"\n};\nconst overlay = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n  zIndex: 90\n};\nexport default ((data, config = {}) => {\n  const Container = NavContainer(data);\n\n  if (config.contentComponent) {\n    const SideBar = config.contentComponent;\n    return observer(props => {\n      const ref = useRef({});\n      const obs = useObservable({\n        opened: false\n      });\n      useEffect(ResponsiveHandler(obs), []);\n      useEffect(() => {\n        if (ref.current) {\n          ref.current.toggleDrawer = function () {\n            obs.opened = !obs.opened;\n          };\n\n          ref.current.closeDrawer = function () {\n            obs.opened = false;\n          };\n        }\n      });\n      return __jsx(View, {\n        style: {\n          position: \"absolute\",\n          left: 0,\n          right: 0,\n          bottom: 0,\n          top: 0,\n          flexDirection: \"row\",\n          alignItems: \"stretch\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(View, {\n        style: Responsive({\n          xs: _objectSpread({}, absoluteSideBar, {\n            minWidth: \"50%\"\n          }, {\n            transform: [{\n              scale: obs.opened ? 1 : 0\n            }]\n          }),\n          sm: _objectSpread({}, absoluteSideBar, {\n            minWidth: \"50%\"\n          }, {\n            transform: [{\n              scale: obs.opened ? 1 : 0\n            }]\n          }),\n          md: _objectSpread({}, flexSideBar, {\n            transform: [{\n              scale: 1\n            }]\n          }),\n          lg: _objectSpread({}, flexSideBar, {\n            transform: [{\n              scale: 1\n            }]\n          }),\n          xl: _objectSpread({}, flexSideBar, {\n            transform: [{\n              scale: 1\n            }]\n          }),\n          xxl: _objectSpread({}, flexSideBar, {\n            transform: [{\n              scale: 1\n            }]\n          })\n        }, obs.width),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(SideBar, {\n        navigation: ref.current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), obs.opened && __jsx(TouchableOpacity, {\n        onPress: () => {\n          obs.opened = false;\n        },\n        style: Responsive({\n          xs: _objectSpread({}, overlay),\n          sm: _objectSpread({}, overlay),\n          md: {},\n          lg: {},\n          xl: {},\n          xxl: {}\n        }, obs.width),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), __jsx(Container, {\n        ref: ref,\n        parentNavigation: props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    });\n  } else {\n    return () => {\n      return __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      });\n    };\n  }\n});","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/libs/nav/SideNav.tsx"],"names":["observer","useObservable","React","useEffect","useRef","TouchableOpacity","View","Responsive","ResponsiveHandler","NavContainer","absoluteSideBar","position","left","top","bottom","width","flexDirection","alignItems","zIndex","flexSideBar","maxWidth","overlay","right","data","config","Container","contentComponent","SideBar","props","ref","obs","opened","current","toggleDrawer","closeDrawer","xs","minWidth","transform","scale","sm","md","lg","xl","xxl","navigation"],"mappings":"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","sourcesContent":["import { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect, useRef } from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport { Responsive, ResponsiveHandler } from \"../ui/Style\";\nimport NavContainer from \"./NavContainer\";\n\nconst absoluteSideBar = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  width: \"30%\",\n  flexDirection: \"row\",\n  alignItems: \"stretch\",\n  zIndex: 99\n};\nconst flexSideBar = {\n  width: \"30%\",\n  maxWidth: 280,\n  flexDirection: \"row\",\n  alignItems: \"stretch\"\n};\nconst overlay = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n  zIndex: 90\n};\n\nexport default (data: any, config: any = {}) => {\n  const Container: any = NavContainer(data);\n\n  if (config.contentComponent) {\n    const SideBar = config.contentComponent;\n    return observer((props: any) => {\n      const ref = useRef({});\n      const obs: any = useObservable({\n        opened: false\n      });\n      useEffect(ResponsiveHandler(obs), []);\n      useEffect(() => {\n        if (ref.current) {\n          (ref.current as any).toggleDrawer = function() {\n            obs.opened = !obs.opened;\n          };\n          (ref.current as any).closeDrawer = function() {\n            obs.opened = false;\n          };\n        }\n      });\n      return (\n        <View\n          style={{\n            position: \"absolute\",\n            left: 0,\n            right: 0,\n            bottom: 0,\n            top: 0,\n            flexDirection: \"row\",\n            alignItems: \"stretch\"\n          }}\n        >\n          <View\n            style={Responsive(\n              {\n                xs: {\n                  ...absoluteSideBar,\n                  ...{\n                    minWidth: \"50%\"\n                  },\n                  transform: [{ scale: obs.opened ? 1 : 0 }]\n                },\n                sm: {\n                  ...absoluteSideBar,\n                  ...{\n                    minWidth: \"50%\"\n                  },\n                  transform: [{ scale: obs.opened ? 1 : 0 }]\n                },\n                md: { ...flexSideBar, transform: [{ scale: 1 }] },\n                lg: { ...flexSideBar, transform: [{ scale: 1 }] },\n                xl: { ...flexSideBar, transform: [{ scale: 1 }] },\n                xxl: { ...flexSideBar, transform: [{ scale: 1 }] }\n              },\n              obs.width\n            )}\n          >\n            <SideBar navigation={ref.current} />\n          </View>\n          {obs.opened && (\n            <TouchableOpacity\n              onPress={() => {\n                obs.opened = false;\n              }}\n              style={Responsive(\n                {\n                  xs: {\n                    ...overlay\n                  },\n                  sm: {\n                    ...overlay\n                  },\n                  md: {},\n                  lg: {},\n                  xl: {},\n                  xxl: {}\n                },\n                obs.width\n              )}\n            />\n          )}\n          <Container ref={ref} parentNavigation={props.navigation} />\n        </View>\n      );\n    });\n  } else {\n    return () => {\n      return <Container />;\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}