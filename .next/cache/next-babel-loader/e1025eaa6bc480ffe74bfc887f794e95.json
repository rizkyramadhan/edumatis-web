{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/riz/Documents/edumatis-web/pages/app/screens/siswa/Pengumuman/Pengumuman.tsx\";\nvar __jsx = React.createElement;\nimport rawQuery from \"../../../../../libs/queries/crud/rawQuery\";\nimport { getSession } from \"../../../../../libs/queries/user/getsetSession\";\nimport UIBody from \"../../../../../libs/ui/UIBody\";\nimport UIContainer from \"../../../../../libs/ui/UIContainer\";\nimport UIHead from \"../../../../../libs/ui/UIHead\";\nimport UIList from \"../../../../../libs/ui/UIList\";\nimport dayjs from \"dayjs\";\nimport RelativeTime from \"dayjs/plugin/relativeTime\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Text, View } from \"react-native-web\";\ndayjs.extend(RelativeTime);\nexport default observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    loading: true,\n    list: []\n  });\n  return __jsx(UIContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Pengumuman\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(UIBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(UIList, {\n    data: data.list,\n    loading: data.loading,\n    render: list => {\n      const item = list.item;\n      const date = dayjs(item.tgl).fromNow();\n      return __jsx(View, {\n        style: {\n          padding: 10,\n          paddingHorizontal: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, __jsx(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: \"bold\",\n          color: \"#555\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, item.pengumuman), __jsx(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, date)));\n    },\n    reload: async () => {\n      const session = await getSession();\n      const kelasRaw = await rawQuery(`{\n              kelas_murid(where: {murid_id: {_eq: ${session.murid.id}}}) {\n                kelas_id\n              }\n            }`);\n\n      if (kelasRaw && kelasRaw.kelas_murid && kelasRaw.kelas_murid.length > 0) {\n        const kelas = kelasRaw.kelas_murid.map(k => {\n          return k.kelas_id.toString();\n        });\n        const result = await rawQuery(`{\n                  pengumuman(where: {status: {_eq: \"aktif\"}, kelas: {_has_keys_any: ${_JSON$stringify(kelas)}}}) {\n                    pengumuman\n                    status\n                    tgl\n                  }\n                }\n                `);\n        data.list = result.pengumuman.map(item => {\n          return item;\n        });\n      }\n\n      data.loading = false;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/pages/app/screens/siswa/Pengumuman/Pengumuman.tsx"],"names":["rawQuery","getSession","UIBody","UIContainer","UIHead","UIList","dayjs","RelativeTime","observer","useObservable","React","Text","View","extend","navigation","data","loading","list","item","date","tgl","fromNow","padding","paddingHorizontal","fontSize","fontWeight","color","pengumuman","session","kelasRaw","murid","id","kelas_murid","length","kelas","map","k","kelas_id","toString","result"],"mappings":"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","sourcesContent":["import rawQuery from \"@app/libs/queries/crud/rawQuery\";\nimport { getSession } from \"@app/libs/queries/user/getsetSession\";\nimport UIBody from \"@app/libs/ui/UIBody\";\nimport UIContainer from \"@app/libs/ui/UIContainer\";\nimport UIHead from \"@app/libs/ui/UIHead\";\nimport UIList from \"@app/libs/ui/UIList\";\nimport dayjs from \"dayjs\";\nimport RelativeTime from \"dayjs/plugin/relativeTime\";\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Text, View } from \"react-native\";\n\ndayjs.extend(RelativeTime);\nexport default observer(({ navigation }: any) => {\n  const data = useObservable({\n    loading: true,\n    list: []\n  });\n\n  return (\n    <UIContainer>\n      <UIHead navigation={navigation} title=\"Pengumuman\" />\n      <UIBody>\n        <UIList\n          data={data.list}\n          loading={data.loading}\n          render={(list: any) => {\n            const item = list.item;\n            const date = dayjs(item.tgl).fromNow();\n            return (\n              <View style={{ padding: 10, paddingHorizontal: 15 }}>\n                <View>\n                  <Text\n                    style={{ fontSize: 15, fontWeight: \"bold\", color: \"#555\" }}\n                  >\n                    {item.pengumuman}\n                  </Text>\n                  <Text>{date}</Text>\n                </View>\n              </View>\n            );\n          }}\n          reload={async () => {\n            const session = await getSession();\n            const kelasRaw = await rawQuery(`{\n              kelas_murid(where: {murid_id: {_eq: ${session.murid.id}}}) {\n                kelas_id\n              }\n            }`);\n            if (\n              kelasRaw &&\n              kelasRaw.kelas_murid &&\n              kelasRaw.kelas_murid.length > 0\n            ) {\n              const kelas = kelasRaw.kelas_murid.map((k: any) => {\n                return k.kelas_id.toString();\n              });\n\n              const result = await rawQuery(\n                `{\n                  pengumuman(where: {status: {_eq: \"aktif\"}, kelas: {_has_keys_any: ${JSON.stringify(\n                    kelas\n                  )}}}) {\n                    pengumuman\n                    status\n                    tgl\n                  }\n                }\n                `\n              );\n\n              data.list = result.pengumuman.map((item: any) => {\n                return item;\n              });\n            }\n\n            data.loading = false;\n          }}\n        />\n      </UIBody>\n    </UIContainer>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}