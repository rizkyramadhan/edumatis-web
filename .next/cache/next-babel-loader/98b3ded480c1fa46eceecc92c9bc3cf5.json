{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/riz/Documents/edumatis-web/pages/app/screens/admin/Report.tsx\";\nvar __jsx = React.createElement;\nimport StackNav from \"../../../../libs/nav/StackNav\";\nimport rawQuery from \"../../../../libs/queries/crud/rawQuery\";\nimport UIBody from \"../../../../libs/ui/UIBody\";\nimport UIButton from \"../../../../libs/ui/UIButton\";\nimport UICol from \"../../../../libs/ui/UICol\";\nimport UIContainer from \"../../../../libs/ui/UIContainer\";\nimport UIHead from \"../../../../libs/ui/UIHead\";\nimport UIList from \"../../../../libs/ui/UIList\";\nimport UIListItem from \"../../../../libs/ui/UIListItem\";\nimport UIRow from \"../../../../libs/ui/UIRow\";\nimport RelativeTime from 'dayjs/plugin/relativeTime';\nimport _ from 'lodash';\nimport get from 'lodash.get';\nimport { observer, useObservable } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { ScrollView, View } from \"react-native-web\";\n\nconst dayjs = require('dayjs');\n\ndayjs.extend(RelativeTime);\nconst Report = observer(({\n  navigation\n}) => {\n  const data = useObservable({\n    listRaw: [],\n    filter: {\n      kewajiban: '',\n      kelas: ''\n    },\n    loading: true\n  });\n  const kelasList = {\n    ' Semua Kelas': true\n  };\n  const list = data.listRaw.filter(row => {\n    let match = true;\n\n    const kelas = _.get(row, 'murid.kelas_murids[0].kelas.nama_kelas');\n\n    if (kelas && kelasList[kelas]) {\n      kelasList[kelas] = true;\n    }\n\n    if (data.filter.kewajiban) {\n      if (row.nama_kewajiban !== data.filter.kewajiban) {\n        match = false;\n      }\n    }\n\n    if (data.filter.kelas && data.filter.kelas !== ' Semua kelas') {\n      if (kelas.trim() !== data.filter.kelas.trim()) {\n        match = false;\n      }\n    }\n\n    return match;\n  });\n  useEffect(() => {\n    let fetch = async () => {\n      const result = await rawQuery(`{\n        transaksi(order_by: {tstamp: asc}) {\n          id\n          status\n          tstamp\n          amount: detail(path:\"amount\")\n          detail(path:\"status\")\n          paid(path:\"status\")\n          murid {\n            id\n            nama_murid\n            nsa\n            kelas_murids {\n              kelas {\n                nama_kelas\n              }\n            }\n          }\n          kewajiban {\n            nama_kewajiban\n          }\n        }\n      }\n      `);\n      data.listRaw = result.transaksi;\n      data.loading = false;\n    };\n\n    fetch();\n  }, []);\n  return __jsx(UIContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(UIHead, {\n    navigation: navigation,\n    title: \"Laporan Transaksi\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(UIButton, {\n    size: \"small\",\n    onPress: () => {\n      const parse = (e, isRoot = false) => {\n        return _Object$keys(e).map(r => {\n          const row = e[r];\n          if (isRoot) return r;\n          return row;\n        }).join(',');\n      };\n\n      const csvList = [];\n      list.map(e => {\n        const res = {};\n\n        for (let i in e) {\n          const row = e[i];\n\n          if (typeof row === 'object' && row !== null) {\n            if (row.nama_kewajiban) res['nama_kewajiban'] = row.nama_kewajiban;\n\n            if (row.nama_murid) {\n              res['nama_murid'] = _.get(row, 'nama_murid');\n              res['nsa'] = _.get(row, 'nsa');\n              res['kelas'] = _.get(row, 'kelas_murids.0.kelas.nama_kelas');\n            }\n          } else res[i] = row;\n        }\n\n        csvList.push(res);\n      });\n      let csvContent = 'data:text/csv;charset=utf-8,' + parse(csvList[0], true) + '\\n' + csvList.map(e => parse(e)).join('\\n');\n      var encodedUri = encodeURI(csvContent);\n      var link = document.createElement('a');\n      link.setAttribute('href', encodedUri);\n      link.setAttribute('download', 'report.csv');\n      document.body.appendChild(link); // Required for FF\n\n      link.click(); // This will download the data file named \"my_data.csv\".\n    },\n    style: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: 150\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Download CSV\")), __jsx(UIBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(UIRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    value: data.filter.kelas,\n    onChange: e => {\n      data.filter.kelas = e.target.value;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, _Object$keys(kelasList).map((i, idx) => __jsx(\"option\", {\n    value: i,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, i)))), __jsx(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(View, {\n    style: {\n      flexDirection: 'row',\n      paddingLeft: 25\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(UIRow, {\n    style: {\n      width: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(UICol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"No.\")), __jsx(UIRow, {\n    style: {\n      width: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(UICol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Nama\")), __jsx(UIRow, {\n    style: {\n      width: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(UICol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Kelas\")), __jsx(UIRow, {\n    style: {\n      width: 240\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(UICol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Kewajiban\")), __jsx(UIRow, {\n    style: {\n      width: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, __jsx(UICol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Biaya (Rp)\")), __jsx(UIRow, {\n    style: {\n      width: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(UICol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Status\")), __jsx(UIRow, {\n    style: {\n      width: 150\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, __jsx(UICol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Waktu\")), __jsx(UIRow, {\n    style: {\n      width: 150\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(UICol, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, \"Log\"))), __jsx(UIList, {\n    data: list,\n    loading: data.loading,\n    render: list => {\n      const item = list.item;\n      const tgl = dayjs(item.tstamp);\n      const fromday = tgl.fromNow();\n      const kelas = get(item, 'murid.kelas_murids[0].kelas.nama_kelas') || 'Semua Kelas';\n\n      const nominal = _parseInt(item.amount || item.nominal);\n\n      let status = (item.paid || item.detail || item.status).toLowerCase();\n      if (status === 'paid') status = 'success';\n      return __jsx(UIListItem, {\n        onPress: () => {\n          navigation.navigate('TransaksiDetail', {\n            item: item\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, __jsx(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, __jsx(UIRow, {\n        style: {\n          width: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, __jsx(UICol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, item.id)), __jsx(UIRow, {\n        style: {\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, __jsx(UICol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, item.murid.nama_murid)), __jsx(UIRow, {\n        style: {\n          width: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, __jsx(UICol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, kelas)), __jsx(UIRow, {\n        style: {\n          width: 240\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, __jsx(UICol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, item.kewajiban.nama_kewajiban)), __jsx(UIRow, {\n        style: {\n          width: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, __jsx(UICol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, (nominal || 0).toLocaleString())), __jsx(UIRow, {\n        style: {\n          width: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, __jsx(UICol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, status)), __jsx(UIRow, {\n        style: {\n          width: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, __jsx(UICol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, tgl.format('DD MMM YYYY - hh.mm'))), __jsx(UIRow, {\n        style: {\n          width: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, __jsx(UICol, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, fromday))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }))));\n});\nexport default StackNav({\n  Report: {\n    screen: Report\n  }\n});","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/pages/app/screens/admin/Report.tsx"],"names":["StackNav","rawQuery","UIBody","UIButton","UICol","UIContainer","UIHead","UIList","UIListItem","UIRow","RelativeTime","_","get","observer","useObservable","React","useEffect","ScrollView","View","dayjs","require","extend","Report","navigation","data","listRaw","filter","kewajiban","kelas","loading","kelasList","list","row","match","nama_kewajiban","trim","fetch","result","transaksi","parse","e","isRoot","map","r","join","csvList","res","i","nama_murid","push","csvContent","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","flexDirection","alignItems","width","target","value","idx","paddingLeft","item","tgl","tstamp","fromday","fromNow","nominal","amount","status","paid","detail","toLowerCase","navigate","id","murid","toLocaleString","format","screen"],"mappings":"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","sourcesContent":["import StackNav from '@app/libs/nav/StackNav';\nimport rawQuery from '@app/libs/queries/crud/rawQuery';\nimport UIBody from '@app/libs/ui/UIBody';\nimport UIButton from '@app/libs/ui/UIButton';\nimport UICol from '@app/libs/ui/UICol';\nimport UIContainer from '@app/libs/ui/UIContainer';\nimport UIHead from '@app/libs/ui/UIHead';\nimport UIList from '@app/libs/ui/UIList';\nimport UIListItem from '@app/libs/ui/UIListItem';\nimport UIRow from '@app/libs/ui/UIRow';\nimport RelativeTime from 'dayjs/plugin/relativeTime';\nimport _ from 'lodash';\nimport get from 'lodash.get';\nimport { observer, useObservable } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { ScrollView, View } from 'react-native';\nconst dayjs = require('dayjs');\ndayjs.extend(RelativeTime);\nconst Report = observer(({ navigation }: any) => {\n  const data = useObservable({\n    listRaw: [],\n    filter: {\n      kewajiban: '',\n      kelas: ''\n    },\n\n    loading: true\n  });\n\n  const kelasList = { ' Semua Kelas': true };\n  const list = data.listRaw.filter((row: any) => {\n    let match = true;\n\n    const kelas = _.get(row, 'murid.kelas_murids[0].kelas.nama_kelas');\n    if (kelas && kelasList[kelas]) {\n      kelasList[kelas] = true;\n    }\n\n    if (data.filter.kewajiban) {\n      if (row.nama_kewajiban !== data.filter.kewajiban) {\n        match = false;\n      }\n    }\n\n    if (data.filter.kelas && data.filter.kelas !== ' Semua kelas') {\n      if (kelas.trim() !== data.filter.kelas.trim()) {\n        match = false;\n      }\n    }\n    return match;\n  });\n  useEffect(() => {\n    let fetch = async () => {\n      const result = await rawQuery(`{\n        transaksi(order_by: {tstamp: asc}) {\n          id\n          status\n          tstamp\n          amount: detail(path:\"amount\")\n          detail(path:\"status\")\n          paid(path:\"status\")\n          murid {\n            id\n            nama_murid\n            nsa\n            kelas_murids {\n              kelas {\n                nama_kelas\n              }\n            }\n          }\n          kewajiban {\n            nama_kewajiban\n          }\n        }\n      }\n      `);\n      data.listRaw = result.transaksi;\n      data.loading = false;\n    };\n    fetch();\n  }, []);\n  return (\n    <UIContainer>\n      <UIHead navigation={navigation} title='Laporan Transaksi'>\n        <UIButton\n          size='small'\n          onPress={() => {\n            const parse = (e: any, isRoot = false) => {\n              return Object.keys(e)\n                .map(r => {\n                  const row = e[r] as any;\n                  if (isRoot) return r;\n                  return row;\n                })\n                .join(',');\n            };\n\n            const csvList: any = [];\n            list.map(e => {\n              const res: any = {};\n              for (let i in e) {\n                const row = e[i] as any;\n                if (typeof row === 'object' && row !== null) {\n                  if (row.nama_kewajiban)\n                    res['nama_kewajiban'] = row.nama_kewajiban;\n                  if (row.nama_murid) {\n                    res['nama_murid'] = _.get(row, 'nama_murid');\n                    res['nsa'] = _.get(row, 'nsa');\n                    res['kelas'] = _.get(\n                      row,\n                      'kelas_murids.0.kelas.nama_kelas'\n                    );\n                  }\n                } else res[i] = row;\n              }\n              csvList.push(res);\n            });\n\n            let csvContent =\n              'data:text/csv;charset=utf-8,' +\n              parse(csvList[0], true) +\n              '\\n' +\n              csvList.map((e: any) => parse(e)).join('\\n');\n\n            var encodedUri = encodeURI(csvContent);\n            var link = document.createElement('a');\n            link.setAttribute('href', encodedUri);\n            link.setAttribute('download', 'report.csv');\n            document.body.appendChild(link); // Required for FF\n\n            link.click(); // This will download the data file named \"my_data.csv\".\n          }}\n          style={{ flexDirection: 'column', alignItems: 'center', width: 150 }}\n        >\n          Download CSV\n        </UIButton>\n      </UIHead>\n      <UIBody>\n        <UIRow>\n          <select\n            value={data.filter.kelas}\n            onChange={e => {\n              data.filter.kelas = e.target.value;\n            }}\n          >\n            {Object.keys(kelasList).map((i, idx) => (\n              <option value={i} key={idx}>\n                {i}\n              </option>\n            ))}\n          </select>\n        </UIRow>\n        <ScrollView>\n          <View\n            style={{\n              flexDirection: 'row',\n              paddingLeft: 25\n            }}\n          >\n            <UIRow style={{ width: 40 }}>\n              <UICol>No.</UICol>\n            </UIRow>\n            <UIRow style={{ width: 200 }}>\n              <UICol>Nama</UICol>\n            </UIRow>\n            <UIRow style={{ width: 100 }}>\n              <UICol>Kelas</UICol>\n            </UIRow>\n            <UIRow\n              style={{\n                width: 240\n              }}\n            >\n              <UICol>Kewajiban</UICol>\n            </UIRow>\n            <UIRow\n              style={{\n                width: 100\n              }}\n            >\n              <UICol>Biaya (Rp)</UICol>\n            </UIRow>\n            <UIRow\n              style={{\n                width: 100\n              }}\n            >\n              <UICol>Status</UICol>\n            </UIRow>\n            <UIRow\n              style={{\n                width: 150\n              }}\n            >\n              <UICol>Waktu</UICol>\n            </UIRow>\n            <UIRow style={{ width: 150 }}>\n              <UICol>Log</UICol>\n            </UIRow>\n          </View>\n          <UIList\n            data={list}\n            loading={data.loading}\n            render={(list: any) => {\n              const item = list.item;\n\n              const tgl = dayjs(item.tstamp);\n              const fromday = tgl.fromNow();\n              const kelas =\n                get(item, 'murid.kelas_murids[0].kelas.nama_kelas') ||\n                'Semua Kelas';\n              const nominal = parseInt(item.amount || item.nominal);\n              let status = (\n                item.paid ||\n                item.detail ||\n                item.status\n              ).toLowerCase();\n              if (status === 'paid') status = 'success';\n\n              return (\n                <UIListItem\n                  onPress={() => {\n                    navigation.navigate('TransaksiDetail', {\n                      item: item\n                    });\n                  }}\n                >\n                  <View style={{ flexDirection: 'row' }}>\n                    <UIRow style={{ width: 40 }}>\n                      <UICol>{item.id}</UICol>\n                    </UIRow>\n                    <UIRow style={{ width: 200 }}>\n                      <UICol>{item.murid.nama_murid}</UICol>\n                    </UIRow>\n                    <UIRow style={{ width: 100 }}>\n                      <UICol>{kelas}</UICol>\n                    </UIRow>\n                    <UIRow style={{ width: 240 }}>\n                      <UICol>{item.kewajiban.nama_kewajiban}</UICol>\n                    </UIRow>\n                    <UIRow style={{ width: 100 }}>\n                      <UICol>{(nominal || 0).toLocaleString()}</UICol>\n                    </UIRow>\n                    <UIRow style={{ width: 100 }}>\n                      <UICol>{status}</UICol>\n                    </UIRow>\n                    <UIRow style={{ width: 150 }}>\n                      <UICol>{tgl.format('DD MMM YYYY - hh.mm')}</UICol>\n                    </UIRow>\n                    <UIRow style={{ width: 150 }}>\n                      <UICol>{fromday}</UICol>\n                    </UIRow>\n                  </View>\n                </UIListItem>\n              );\n            }}\n          />\n        </ScrollView>\n      </UIBody>\n    </UIContainer>\n  );\n});\n\nexport default StackNav({\n  Report: { screen: Report }\n});\n"]},"metadata":{},"sourceType":"module"}