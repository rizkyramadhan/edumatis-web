{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport { observer, useObservable } from \"mobx-react-lite\";\nimport React, { useEffect, useRef } from \"react\";\nimport { TouchableOpacity, View } from \"react-native-web\";\nimport { Responsive, ResponsiveHandler } from \"../ui/Style\";\nimport NavContainer from \"./NavContainer\";\nvar absoluteSideBar = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  width: \"30%\",\n  flexDirection: \"row\",\n  alignItems: \"stretch\",\n  zIndex: 99\n};\nvar flexSideBar = {\n  width: \"30%\",\n  maxWidth: 280,\n  flexDirection: \"row\",\n  alignItems: \"stretch\"\n};\nvar overlay = {\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n  zIndex: 90\n};\nexport default (function (data) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var Container = NavContainer(data);\n\n  if (config.contentComponent) {\n    var SideBar = config.contentComponent;\n    return observer(function (props) {\n      var ref = useRef({});\n      var obs = useObservable({\n        opened: false\n      });\n      useEffect(ResponsiveHandler(obs), []);\n      useEffect(function () {\n        if (ref.current) {\n          ref.current.toggleDrawer = function () {\n            obs.opened = !obs.opened;\n          };\n\n          ref.current.closeDrawer = function () {\n            obs.opened = false;\n          };\n        }\n      });\n      return __jsx(View, {\n        style: {\n          position: \"absolute\",\n          left: 0,\n          right: 0,\n          bottom: 0,\n          top: 0,\n          flexDirection: \"row\",\n          alignItems: \"stretch\"\n        }\n      }, __jsx(View, {\n        style: Responsive({\n          xs: _objectSpread({}, absoluteSideBar, {\n            minWidth: \"50%\"\n          }, {\n            transform: [{\n              scale: obs.opened ? 1 : 0\n            }]\n          }),\n          sm: _objectSpread({}, absoluteSideBar, {\n            minWidth: \"50%\"\n          }, {\n            transform: [{\n              scale: obs.opened ? 1 : 0\n            }]\n          }),\n          md: _objectSpread({}, flexSideBar, {\n            transform: [{\n              scale: 1\n            }]\n          }),\n          lg: _objectSpread({}, flexSideBar, {\n            transform: [{\n              scale: 1\n            }]\n          }),\n          xl: _objectSpread({}, flexSideBar, {\n            transform: [{\n              scale: 1\n            }]\n          }),\n          xxl: _objectSpread({}, flexSideBar, {\n            transform: [{\n              scale: 1\n            }]\n          })\n        }, obs.width)\n      }, __jsx(SideBar, {\n        navigation: ref.current\n      })), obs.opened && __jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          obs.opened = false;\n        },\n        style: Responsive({\n          xs: _objectSpread({}, overlay),\n          sm: _objectSpread({}, overlay),\n          md: {},\n          lg: {},\n          xl: {},\n          xxl: {}\n        }, obs.width)\n      }), __jsx(Container, {\n        ref: ref,\n        parentNavigation: props.navigation\n      }));\n    });\n  } else {\n    return function () {\n      return __jsx(Container, null);\n    };\n  }\n});","map":null,"metadata":{},"sourceType":"module"}