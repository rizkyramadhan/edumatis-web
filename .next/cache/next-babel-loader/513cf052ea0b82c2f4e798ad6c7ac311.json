{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { AsyncStorage } from \"react-native-web\";\nimport query from \"../crud/query\";\nimport config from \"../../config\";\nexport async function setSession(value) {\n  try {\n    await AsyncStorage.setItem(\"SESSION\", _JSON$stringify(value));\n  } catch (error) {\n    return;\n  }\n}\nexport async function getSession(loadFromCache = true) {\n  try {\n    const sessionRaw = await AsyncStorage.getItem(\"SESSION\");\n\n    if (sessionRaw !== null) {\n      let session = JSON.parse(sessionRaw);\n\n      if (loadFromCache === false) {\n        session.user = await query(\"user\", [...config.user.columns], {\n          where: {\n            username: session.user.username\n          }\n        });\n        setSession(session);\n      }\n\n      return session;\n    }\n\n    return null;\n  } catch (error) {\n    return null;\n  }\n}","map":{"version":3,"sources":["/Users/riz/Documents/edumatis-web/libs/queries/user/getsetSession.ts"],"names":["AsyncStorage","query","config","setSession","value","setItem","error","getSession","loadFromCache","sessionRaw","getItem","session","JSON","parse","user","columns","where","username"],"mappings":";AAAA,SAASA,YAAT;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AAEA,OAAO,eAAeC,UAAf,CAA0BC,KAA1B,EAAsC;AAC3C,MAAI;AACF,UAAMJ,YAAY,CAACK,OAAb,CAAqB,SAArB,EAAgC,gBAAeD,KAAf,CAAhC,CAAN;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd;AACD;AACF;AAED,OAAO,eAAeC,UAAf,CAA0BC,aAAa,GAAG,IAA1C,EAAgD;AACrD,MAAI;AACF,UAAMC,UAAU,GAAG,MAAMT,YAAY,CAACU,OAAb,CAAqB,SAArB,CAAzB;;AACA,QAAID,UAAU,KAAK,IAAnB,EAAyB;AACvB,UAAIE,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAd;;AACA,UAAID,aAAa,KAAK,KAAtB,EAA6B;AAC3BG,QAAAA,OAAO,CAACG,IAAR,GAAe,MAAMb,KAAK,CAAC,MAAD,EAAS,CAAC,GAAGC,MAAM,CAACY,IAAP,CAAYC,OAAhB,CAAT,EAAmC;AAC3DC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAEN,OAAO,CAACG,IAAR,CAAaG;AAAzB;AADoD,SAAnC,CAA1B;AAGAd,QAAAA,UAAU,CAACQ,OAAD,CAAV;AACD;;AAED,aAAOA,OAAP;AACD;;AACD,WAAO,IAAP;AACD,GAdD,CAcE,OAAOL,KAAP,EAAc;AACd,WAAO,IAAP;AACD;AACF","sourcesContent":["import { AsyncStorage } from \"react-native\";\nimport query from \"../crud/query\";\nimport config from \"@app/libs/config\";\n\nexport async function setSession(value: any) {\n  try {\n    await AsyncStorage.setItem(\"SESSION\", JSON.stringify(value));\n  } catch (error) {\n    return;\n  }\n}\n\nexport async function getSession(loadFromCache = true) {\n  try {\n    const sessionRaw = await AsyncStorage.getItem(\"SESSION\");\n    if (sessionRaw !== null) {\n      let session = JSON.parse(sessionRaw);\n      if (loadFromCache === false) {\n        session.user = await query(\"user\", [...config.user.columns], {\n          where: { username: session.user.username }\n        });\n        setSession(session);\n      }\n\n      return session;\n    }\n    return null;\n  } catch (error) {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}